<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='mp_tweak_entry' type='{_mp_tweak_entry=&quot;name&quot;^@&quot;value&quot;^v&quot;min&quot;^v&quot;max&quot;^v&quot;encoding&quot;^*}'>
<field declared_type='MPTweakLiteralString*' name='name' type='^@'/>
<field declared_type='void*' name='value' type='^v'/>
<field declared_type='void*' name='min' type='^v'/>
<field declared_type='void*' name='max' type='^v'/>
<field declared_type='char**' name='encoding' type='^*'/>
</struct>
<constant const='true' declared_type='NSString*' name='AFNetworkingErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationDidStartNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationFailingURLRequestErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationFailingURLResponseErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingReachabilityDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingReachabilityNotificationStatusItem' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteAssetPathKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteResponseDataKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteResponseSerializerKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteSerializedResponseKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishAssetPathKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishResponseDataKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishResponseSerializerKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishSerializedResponseKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidResumeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidStartNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidSuspendNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFURLSessionDidInvalidateNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFURLSessionDownloadTaskDidFailToMoveFileNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='CTAssetScrollViewTappedNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='CTAssetsPickerSelectedAssetsChangedNotification' type='@'/>
<constant const='true' declared_type='NSUInteger' name='DTBadTypeException' type='I' type64='Q'/>
<constant const='true' declared_type='NSString*' name='DTErrorDomain' type='@'/>
<constant const='true' declared_type='NSUInteger' name='DTInsertOutOfBoundsException' type='I' type64='Q'/>
<constant const='true' declared_type='NSUInteger' name='DTRemoveOutOfBoundsException' type='I' type64='Q'/>
<constant const='true' declared_type='NSString*' name='HNKErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='HNKExtendedFileAttributeKey' type='@'/>
<constant const='true' declared_type='CGFloat' name='HNKViewFormatCompressionQuality' type='f' type64='d'/>
<constant const='true' declared_type='unsigned long long' name='HNKViewFormatDiskCapacity' type='Q'/>
<constant const='true' declared_type='unichar' name='ISO8601DefaultTimeSeparatorCharacter' type='S'/>
<constant const='true' declared_type='NSInteger' name='MILLISECONDS_IN_DAY' type='i' type64='q'/>
<constant const='true' declared_type='NSString*' name='MPABTestDesignerChangeRequestMessageType' type='@'/>
<constant const='true' declared_type='NSString*' name='MPABTestDesignerClearRequestMessageType' type='@'/>
<constant const='true' declared_type='NSString*' name='MPABTestDesignerDeviceInfoRequestMessageType' type='@'/>
<constant const='true' declared_type='NSString*' name='MPABTestDesignerDisconnectMessageType' type='@'/>
<constant const='true' declared_type='NSString*' name='MPABTestDesignerSnapshotRequestMessageType' type='@'/>
<constant const='true' declared_type='NSString*' name='MPABTestDesignerTweakRequestMessageType' type='@'/>
<constant const='true' declared_type='NSString*' name='MPDesignerEventBindingRequestMessageType' type='@'/>
<constant const='true' declared_type='NSString*' name='MPNotificationTypeMini' type='@'/>
<constant const='true' declared_type='NSString*' name='MPNotificationTypeTakeover' type='@'/>
<constant const='true' declared_type='NSString*' name='MPWebSocketErrorDomain' type='@'/>
<constant const='true' declared_type='NSInteger' name='SECONDS_IN_DAY' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='SECONDS_IN_HOUR' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='SECONDS_IN_MINUTE' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='SECONDS_IN_MONTH_28' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='SECONDS_IN_MONTH_29' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='SECONDS_IN_MONTH_30' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='SECONDS_IN_MONTH_31' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='SECONDS_IN_WEEK' type='i' type64='q'/>
<constant const='true' declared_type='long long' name='SECONDS_IN_YEAR' type='q'/>
<constant const='true' declared_type='NSTimeInterval' name='kAFUploadStream3GSuggestedDelay' type='d'/>
<constant const='true' declared_type='NSUInteger' name='kAFUploadStream3GSuggestedPacketSize' type='I' type64='Q'/>
<constant const='true' declared_type='NSString*' name='kAppiraterCurrentVersion' type='@'/>
<constant const='true' declared_type='NSString*' name='kAppiraterDeclinedToRate' type='@'/>
<constant const='true' declared_type='NSString*' name='kAppiraterFirstUseDate' type='@'/>
<constant const='true' declared_type='NSString*' name='kAppiraterRatedCurrentVersion' type='@'/>
<constant const='true' declared_type='NSString*' name='kAppiraterReminderRequestDate' type='@'/>
<constant const='true' declared_type='NSString*' name='kAppiraterSignificantEventCount' type='@'/>
<constant const='true' declared_type='NSString*' name='kAppiraterUseCount' type='@'/>
<constant const='true' declared_type='NSString*' name='kBugsnagReachabilityChangedNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIAdMobHitId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIAdTargetingEnabled' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIAnonymizeIp' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIAppId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIAppInstallerId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIAppName' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIAppVersion' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIAppView' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAICampaignContent' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAICampaignId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAICampaignKeyword' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAICampaignMedium' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAICampaignName' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAICampaignSource' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAICheckoutOption' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAICheckoutStep' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIClientId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAICurrencyCode' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIDataSource' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIDescription' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIEncoding' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIEvent' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIEventAction' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIEventCategory' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIEventLabel' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIEventValue' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIExDescription' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIExFatal' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIException' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIFlashVersion' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIHitType' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIHostname' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIIdfa' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIImpressionListSource' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIImpressionName' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIImpressionProduct' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIImpressionProductBrand' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIImpressionProductCategory' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIImpressionProductId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIImpressionProductName' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIImpressionProductPosition' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIImpressionProductPrice' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIImpressionProductVariant' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIItem' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIItemCategory' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIItemName' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIItemPrice' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIItemQuantity' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIItemSku' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIJavaEnabled' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAILanguage' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAILocation' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAINonInteraction' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPAAdd' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPAAffiliation' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPACheckout' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPACheckoutOption' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPAClick' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPACouponCode' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPADetail' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPAPurchase' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPARefund' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPARemove' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPARevenue' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPAShipping' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPATax' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPATransactionId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPage' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProduct' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductAction' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductActionList' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductBrand' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductCategory' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductCouponCode' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductListSource' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductName' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductPosition' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductPrice' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductQuantity' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIProductVariant' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPromotionAction' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPromotionClick' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPromotionCreative' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPromotionId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPromotionName' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPromotionPosition' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIPromotionView' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIReferrer' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAISampleRate' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIScreenColors' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIScreenName' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIScreenResolution' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIScreenView' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAISessionControl' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAISocial' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAISocialAction' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAISocialNetwork' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAISocialTarget' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITiming' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITimingCategory' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITimingLabel' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITimingValue' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITimingVar' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITitle' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITrackingId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITransaction' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITransactionAffiliation' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITransactionId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITransactionRevenue' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITransactionShipping' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAITransactionTax' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIUseSecure' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIUserId' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIVersion' type='@'/>
<constant const='true' declared_type='NSString*' name='kGAIViewportSize' type='@'/>
<constant const='true' declared_type='NSString*' name='kSessionVariantKey' type='@'/>
<constant declared_type='NSObject*' name='kTAGDataLayerObjectNotPresent' type='@'/>
<string_constant name='MPTweakSectionName' value='MPTweak'/>
<string_constant name='MPTweakSegmentName' value='__DATA'/>
<string_constant name='USER_TAB_NAME' nsstring='true' value='User'/>
<enum name='AFHTTPRequestQueryStringDefaultStyle' value='0'/>
<enum name='AFNetworkReachabilityStatusNotReachable' value='0'/>
<enum name='AFNetworkReachabilityStatusReachableViaWWAN' value='1'/>
<enum name='AFNetworkReachabilityStatusReachableViaWiFi' value='2'/>
<enum name='AFNetworkReachabilityStatusUnknown' value='-1'/>
<enum name='AFSSLPinningModeCertificate' value='2'/>
<enum name='AFSSLPinningModeNone' value='0'/>
<enum name='AFSSLPinningModePublicKey' value='1'/>
<enum name='BugsnagNotReachable' value='0'/>
<enum name='BugsnagReachableViaWWAN' value='1'/>
<enum name='BugsnagReachableViaWiFi' value='2'/>
<enum name='CEDirectionHorizontal' value='0'/>
<enum name='CEDirectionVertical' value='1'/>
<enum name='CEInteractionOperationDismiss' value='1'/>
<enum name='CEInteractionOperationPop' value='0'/>
<enum name='CEInteractionOperationTab' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_NSURLConnection' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_NSURLSession' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_Reachability' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_Security' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_Serialization' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_UIKit' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_Appirater' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_Bugsnag' value='3'/>
<enum name='COCOAPODS_VERSION_MAJOR_CTAssetsPickerController' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_CupertinoYankee' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_DateTools' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_GoogleAnalytics_iOS_SDK' value='3'/>
<enum name='COCOAPODS_VERSION_MAJOR_GoogleAnalytics_iOS_SDK_Core' value='3'/>
<enum name='COCOAPODS_VERSION_MAJOR_GoogleAnalytics_iOS_SDK_IDFA' value='3'/>
<enum name='COCOAPODS_VERSION_MAJOR_Haneke' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_ISO8601DateFormatter' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_KGNoise' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_MRProgress_ActivityIndicator' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_MRProgress_Blur' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_MRProgress_Circular' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_MRProgress_Helper' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_MRProgress_Icons' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_MRProgress_Overlay' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_MRProgress_ProgressBaseClass' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_MRProgress_Stopable' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_Mixpanel' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_Mixpanel_MPCategoryHelpers' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_NSData_MD5Digest' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_Optimizely_iOS_SDK' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_UIImage_ResizeMagick' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_VCTransitionsLibrary' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_NSURLConnection' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_NSURLSession' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_Reachability' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_Security' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_Serialization' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_UIKit' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_Appirater' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_Bugsnag' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_CTAssetsPickerController' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_CupertinoYankee' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_DateTools' value='4'/>
<enum name='COCOAPODS_VERSION_MINOR_GoogleAnalytics_iOS_SDK' value='10'/>
<enum name='COCOAPODS_VERSION_MINOR_GoogleAnalytics_iOS_SDK_Core' value='10'/>
<enum name='COCOAPODS_VERSION_MINOR_GoogleAnalytics_iOS_SDK_IDFA' value='10'/>
<enum name='COCOAPODS_VERSION_MINOR_Haneke' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_ISO8601DateFormatter' value='7'/>
<enum name='COCOAPODS_VERSION_MINOR_KGNoise' value='2'/>
<enum name='COCOAPODS_VERSION_MINOR_MRProgress_ActivityIndicator' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_MRProgress_Blur' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_MRProgress_Circular' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_MRProgress_Helper' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_MRProgress_Icons' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_MRProgress_Overlay' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_MRProgress_ProgressBaseClass' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_MRProgress_Stopable' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_Mixpanel' value='6'/>
<enum name='COCOAPODS_VERSION_MINOR_Mixpanel_MPCategoryHelpers' value='6'/>
<enum name='COCOAPODS_VERSION_MINOR_NSData_MD5Digest' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_Optimizely_iOS_SDK' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_UIImage_ResizeMagick' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_VCTransitionsLibrary' value='5'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_NSURLConnection' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_NSURLSession' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_Reachability' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_Security' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_Serialization' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_UIKit' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_Appirater' value='4'/>
<enum name='COCOAPODS_VERSION_PATCH_Bugsnag' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_CTAssetsPickerController' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_CupertinoYankee' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_DateTools' value='3'/>
<enum name='COCOAPODS_VERSION_PATCH_GoogleAnalytics_iOS_SDK' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_GoogleAnalytics_iOS_SDK_Core' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_GoogleAnalytics_iOS_SDK_IDFA' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_Haneke' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_ISO8601DateFormatter' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_KGNoise' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_MRProgress_ActivityIndicator' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_MRProgress_Blur' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_MRProgress_Circular' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_MRProgress_Helper' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_MRProgress_Icons' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_MRProgress_Overlay' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_MRProgress_ProgressBaseClass' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_MRProgress_Stopable' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_Mixpanel' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_Mixpanel_MPCategoryHelpers' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_NSData_MD5Digest' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_Optimizely_iOS_SDK' value='70'/>
<enum name='COCOAPODS_VERSION_PATCH_UIImage_ResizeMagick' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_VCTransitionsLibrary' value='0'/>
<enum name='CubeAnimationTypeInverse' value='0'/>
<enum name='CubeAnimationTypeNormal' value='1'/>
<enum name='CubeAnimationWayHorizontal' value='0'/>
<enum name='CubeAnimationWayVertical' value='1'/>
<enum name='DTTimePeriodAnchorCenter' value='1'/>
<enum name='DTTimePeriodAnchorEnd' value='2'/>
<enum name='DTTimePeriodAnchorStart' value='0'/>
<enum name='DTTimePeriodIntervalClosed' value='1'/>
<enum name='DTTimePeriodIntervalOpen' value='0'/>
<enum name='DTTimePeriodRelationAfter' value='0'/>
<enum name='DTTimePeriodRelationBefore' value='12'/>
<enum name='DTTimePeriodRelationEnclosing' value='5'/>
<enum name='DTTimePeriodRelationEnclosingEndTouching' value='6'/>
<enum name='DTTimePeriodRelationEnclosingStartTouching' value='4'/>
<enum name='DTTimePeriodRelationEndInside' value='10'/>
<enum name='DTTimePeriodRelationEndTouching' value='11'/>
<enum name='DTTimePeriodRelationExactMatch' value='7'/>
<enum name='DTTimePeriodRelationInside' value='8'/>
<enum name='DTTimePeriodRelationInsideEndTouching' value='9'/>
<enum name='DTTimePeriodRelationInsideStartTouching' value='3'/>
<enum name='DTTimePeriodRelationNone' value='13'/>
<enum name='DTTimePeriodRelationStartInside' value='2'/>
<enum name='DTTimePeriodRelationStartTouching' value='1'/>
<enum name='DTTimePeriodSizeDay' value='3'/>
<enum name='DTTimePeriodSizeHour' value='2'/>
<enum name='DTTimePeriodSizeMinute' value='1'/>
<enum name='DTTimePeriodSizeMonth' value='5'/>
<enum name='DTTimePeriodSizeSecond' value='0'/>
<enum name='DTTimePeriodSizeWeek' value='4'/>
<enum name='DTTimePeriodSizeYear' value='6'/>
<enum name='HNKErrorDiskCacheCannotReadImageFromData' value='-300'/>
<enum name='HNKErrorDiskFetcherInvalidData' value='-500'/>
<enum name='HNKErrorFetcherMustReturnImage' value='-200'/>
<enum name='HNKErrorImageNotFound' value='-100'/>
<enum name='HNKErrorNetworkFetcherInvalidData' value='-400'/>
<enum name='HNKErrorNetworkFetcherInvalidStatusCode' value='-402'/>
<enum name='HNKErrorNetworkFetcherMissingData' value='-401'/>
<enum name='HNKPreloadPolicyAll' value='2'/>
<enum name='HNKPreloadPolicyLastSession' value='1'/>
<enum name='HNKPreloadPolicyNone' value='0'/>
<enum name='HNKScaleModeAspectFill' value='2'/>
<enum name='HNKScaleModeAspectFit' value='1'/>
<enum name='HNKScaleModeFill' value='0'/>
<enum name='HNKScaleModeNone' value='3'/>
<enum name='ISO8601DateFormatCalendar' value='0'/>
<enum name='ISO8601DateFormatOrdinal' value='1'/>
<enum name='ISO8601DateFormatWeek' value='2'/>
<enum name='KGLinearGradientDirection0Degrees' value='0'/>
<enum name='KGLinearGradientDirection180Degrees' value='2'/>
<enum name='KGLinearGradientDirection270Degrees' value='3'/>
<enum name='KGLinearGradientDirection90Degrees' value='1'/>
<enum name='MPWebSocketStateClosed' value='3'/>
<enum name='MPWebSocketStateClosing' value='2'/>
<enum name='MPWebSocketStateConnecting' value='0'/>
<enum name='MPWebSocketStateOpen' value='1'/>
<enum name='MRProgressOverlayViewModeCheckmark' value='5'/>
<enum name='MRProgressOverlayViewModeCross' value='6'/>
<enum name='MRProgressOverlayViewModeCustom' value='7'/>
<enum name='MRProgressOverlayViewModeDeterminateCircular' value='1'/>
<enum name='MRProgressOverlayViewModeDeterminateHorizontalBar' value='2'/>
<enum name='MRProgressOverlayViewModeIndeterminate' value='0'/>
<enum name='MRProgressOverlayViewModeIndeterminateSmall' value='3'/>
<enum name='MRProgressOverlayViewModeIndeterminateSmallDefault' value='4'/>
<enum name='NEEDS_DISPATCH_RETAIN_RELEASE' value='0'/>
<enum name='kGAIDatabaseError' value='1'/>
<enum name='kGAIDispatchError' value='2'/>
<enum name='kGAIDispatchGood' value='1'/>
<enum name='kGAIDispatchNoData' value='0'/>
<enum name='kGAILogLevelError' value='1'/>
<enum name='kGAILogLevelInfo' value='3'/>
<enum name='kGAILogLevelNone' value='0'/>
<enum name='kGAILogLevelVerbose' value='4'/>
<enum name='kGAILogLevelWarning' value='2'/>
<enum name='kGAINetworkError' value='2'/>
<enum name='kGAINoError' value='0'/>
<enum name='kTAGContainerCallbackRefreshFailureIoError' value='1'/>
<enum name='kTAGContainerCallbackRefreshFailureNetworkError' value='3'/>
<enum name='kTAGContainerCallbackRefreshFailureNoNetwork' value='2'/>
<enum name='kTAGContainerCallbackRefreshFailureNoSavedContainer' value='0'/>
<enum name='kTAGContainerCallbackRefreshFailureServerError' value='4'/>
<enum name='kTAGContainerCallbackRefreshFailureUnknownError' value='5'/>
<enum name='kTAGContainerCallbackRefreshTypeNetwork' value='1'/>
<enum name='kTAGContainerCallbackRefreshTypeSaved' value='0'/>
<enum name='kTAGDispatchError' value='2'/>
<enum name='kTAGDispatchGood' value='1'/>
<enum name='kTAGDispatchNoData' value='0'/>
<enum name='kTAGLoggerLogLevelDebug' value='1'/>
<enum name='kTAGLoggerLogLevelError' value='4'/>
<enum name='kTAGLoggerLogLevelInfo' value='2'/>
<enum name='kTAGLoggerLogLevelNone' value='5'/>
<enum name='kTAGLoggerLogLevelVerbose' value='0'/>
<enum name='kTAGLoggerLogLevelWarning' value='3'/>
<enum name='kTAGOpenTypePreferFresh' value='1'/>
<enum name='kTAGOpenTypePreferNonDefault' value='0'/>
<enum name='kTAGRefreshModeDefaultContainer' value='1'/>
<enum name='kTAGRefreshModeStandard' value='0'/>
<function name='AFStringFromNetworkReachabilityStatus'>
<arg declared_type='AFNetworkReachabilityStatus' name='status' type='i' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function inline='true' name='MPLog' variadic='true'>
<arg declared_type='NSString*' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MP_NewBase64Decode'>
<arg const='true' declared_type='char*' name='inputBuffer' type='*'/>
<arg declared_type='size_t' name='length' type='L' type64='Q'/>
<arg declared_type='size_t*' name='outputLength' type='^I' type64='^Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='MP_NewBase64Encode'>
<arg const='true' declared_type='void*' name='inputBuffer' type='^v'/>
<arg declared_type='size_t' name='length' type='L' type64='Q'/>
<arg declared_type='_Bool' name='separateLines' type='B'/>
<arg declared_type='size_t*' name='outputLength' type='^I' type64='^Q'/>
<retval declared_type='char*' type='*'/>
</function>
<function inline='true' name='MRCGFloatCeil'>
<arg declared_type='CGFloat' name='x' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</function>
<function inline='true' name='MRCenterCGSizeInCGRect'>
<arg declared_type='CGSize' name='innerRectSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='CGRect' name='outerRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function inline='true' name='MRRotationForStatusBarOrientation'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</function>
<function inline='true' name='MRSystemVersionGreaterThanOrEqualTo8'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='transformValue'>
<arg declared_type='id' name='value' type='@'/>
<arg declared_type='NSString*' name='toType' type='@'/>
<retval declared_type='id' type='@'/>
</function>
<class name='AFCompoundResponseSerializer'>
<method class_method='true' selector='compoundSerializerWithResponseSerializers:'>
<arg declared_type='NSArray*' index='0' name='responseSerializers' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseSerializers'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='responseObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='0' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='1' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperationManager'>
<method selector='DELETE:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='GET:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='HEAD:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='1' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='2' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='PATCH:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='POST:parameters:constructingBodyWithBlock:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='POST:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='PUT:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='manager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='reachabilityManager'>
<retval declared_type='AFNetworkReachabilityManager*' type='@'/>
</method>
<method selector='requestSerializer'>
<retval declared_type='AFHTTPRequestSerializer*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='securityPolicy'>
<retval declared_type='AFSecurityPolicy*' type='@'/>
</method>
<method selector='setCredential:'>
<arg declared_type='NSURLCredential*' index='0' name='credential' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg declared_type='NSOperationQueue*' index='0' name='operationQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestSerializer:'>
<arg declared_type='AFHTTPRequestSerializer*' index='0' name='requestSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecurityPolicy:'>
<arg declared_type='AFSecurityPolicy*' index='0' name='securityPolicy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg declared_type='BOOL' index='0' name='shouldUseCredentialStorage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AFHTTPRequestSerializer'>
<method selector='HTTPMethodsEncodingParametersInURI'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='HTTPRequestHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method selector='multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='3' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:error:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='3' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithMethod:URLString:parameters:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithMethod:URLString:parameters:error:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='NSError**' index='3' name='error' type='^@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method class_method='true' selector='serializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAuthorizationHeaderFieldWithToken:'>
<arg declared_type='NSString*' index='0' name='token' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderFieldWithUsername:password:'>
<arg declared_type='NSString*' index='0' name='username' type='@'/>
<arg declared_type='NSString*' index='1' name='password' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPMethodsEncodingParametersInURI:'>
<arg declared_type='NSSet*' index='0' name='HTTPMethodsEncodingParametersInURI' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueryStringSerializationWithBlock:'>
<arg declared_type='NSString *(^)(NSURLRequest *, NSDictionary *, NSError **)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<arg declared_type='NSError**' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueryStringSerializationWithStyle:'>
<arg declared_type='AFHTTPRequestQueryStringSerializationStyle' index='0' name='style' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' index='0' name='stringEncoding' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forHTTPHeaderField:'>
<arg declared_type='NSString*' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='field' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
</class>
<class name='AFHTTPResponseSerializer'>
<method selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method class_method='true' selector='serializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg declared_type='NSSet*' index='0' name='acceptableContentTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg declared_type='NSIndexSet*' index='0' name='acceptableStatusCodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' index='0' name='stringEncoding' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='validateResponse:data:error:'>
<arg declared_type='NSHTTPURLResponse*' index='0' name='response' type='@'/>
<arg declared_type='NSData*' index='1' name='data' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AFHTTPSessionManager'>
<method selector='DELETE:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='GET:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='HEAD:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='PATCH:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='POST:parameters:constructingBodyWithBlock:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='POST:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='PUT:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithBaseURL:sessionConfiguration:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSURLSessionConfiguration*' index='1' name='configuration' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='manager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='requestSerializer'>
<retval declared_type='AFHTTPRequestSerializer*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='setRequestSerializer:'>
<arg declared_type='AFHTTPRequestSerializer*' index='0' name='requestSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFImageResponseSerializer'>
<method selector='automaticallyInflatesResponseImage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageScale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setAutomaticallyInflatesResponseImage:'>
<arg declared_type='BOOL' index='0' name='automaticallyInflatesResponseImage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScale:'>
<arg declared_type='CGFloat' index='0' name='imageScale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestSerializer'>
<method selector='format'>
<retval declared_type='NSPropertyListFormat' type='I' type64='Q'/>
</method>
<method class_method='true' selector='serializerWithWritingOptions:'>
<arg declared_type='NSJSONWritingOptions' index='0' name='writingOptions' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFormat:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWritingOptions:'>
<arg declared_type='NSJSONWritingOptions' index='0' name='writingOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writingOptions'>
<retval declared_type='NSJSONWritingOptions' type='I' type64='Q'/>
</method>
</class>
<class name='AFJSONResponseSerializer'>
<method selector='readingOptions'>
<retval declared_type='NSJSONReadingOptions' type='I' type64='Q'/>
</method>
<method class_method='true' selector='serializerWithReadingOptions:'>
<arg declared_type='NSJSONReadingOptions' index='0' name='readingOptions' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setReadingOptions:'>
<arg declared_type='NSJSONReadingOptions' index='0' name='readingOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFNetworkReachabilityManager'>
<method selector='initWithReachability:'>
<arg declared_type='SCNetworkReachabilityRef' index='0' name='reachability' type='^{__SCNetworkReachability=}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isReachable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWiFi'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizedNetworkReachabilityStatusString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='managerForAddress:'>
<arg const='true' declared_type='struct sockaddr_in*' index='0' name='address' type='^{sockaddr_in=CCS{in_addr=I}[8c]}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='managerForDomain:'>
<arg declared_type='NSString*' index='0' name='domain' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='networkReachabilityStatus'>
<retval declared_type='AFNetworkReachabilityStatus' type='i' type64='q'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg declared_type='void (^)(AFNetworkReachabilityStatus)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='AFNetworkReachabilityStatus' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='startMonitoring'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopMonitoring'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFPropertyListRequestSerializer'>
<method selector='format'>
<retval declared_type='NSPropertyListFormat' type='I' type64='Q'/>
</method>
<method class_method='true' selector='serializerWithFormat:writeOptions:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I' type64='Q'/>
<arg declared_type='NSPropertyListWriteOptions' index='1' name='writeOptions' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFormat:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWriteOptions:'>
<arg declared_type='NSPropertyListWriteOptions' index='0' name='writeOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeOptions'>
<retval declared_type='NSPropertyListWriteOptions' type='I' type64='Q'/>
</method>
</class>
<class name='AFPropertyListResponseSerializer'>
<method selector='format'>
<retval declared_type='NSPropertyListFormat' type='I' type64='Q'/>
</method>
<method selector='readOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I' type64='Q'/>
</method>
<method class_method='true' selector='serializerWithFormat:readOptions:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I' type64='Q'/>
<arg declared_type='NSPropertyListReadOptions' index='1' name='readOptions' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFormat:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReadOptions:'>
<arg declared_type='NSPropertyListReadOptions' index='0' name='readOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFSecurityPolicy'>
<method selector='SSLPinningMode'>
<retval declared_type='AFSSLPinningMode' type='I' type64='Q'/>
</method>
<method selector='allowInvalidCertificates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='defaultPolicy'>
<retval declared_type='id' type='@'/>
</method>
<method selector='evaluateServerTrust:'>
<arg declared_type='SecTrustRef' index='0' name='serverTrust' type='^{__SecTrust=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='evaluateServerTrust:forDomain:'>
<arg declared_type='SecTrustRef' index='0' name='serverTrust' type='^{__SecTrust=}'/>
<arg declared_type='NSString*' index='1' name='domain' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pinnedCertificates'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='policyWithPinningMode:'>
<arg declared_type='AFSSLPinningMode' index='0' name='pinningMode' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAllowInvalidCertificates:'>
<arg declared_type='BOOL' index='0' name='allowInvalidCertificates' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPinnedCertificates:'>
<arg declared_type='NSArray*' index='0' name='pinnedCertificates' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSSLPinningMode:'>
<arg declared_type='AFSSLPinningMode' index='0' name='SSLPinningMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValidatesCertificateChain:'>
<arg declared_type='BOOL' index='0' name='validatesCertificateChain' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValidatesDomainName:'>
<arg declared_type='BOOL' index='0' name='validatesDomainName' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='validatesCertificateChain'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validatesDomainName'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method class_method='true' selector='batchOfRequestOperations:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' index='0' name='operations' type='@'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='1' name='progressBlock' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' function_pointer='true' index='2' name='completionBlock' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='completionGroup'>
<retval declared_type='dispatch_group_t' type='@'/>
</method>
<method selector='completionQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='securityPolicy'>
<retval declared_type='AFSecurityPolicy*' type='@'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionGroup:'>
<arg declared_type='dispatch_group_t' index='0' name='completionGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='completionQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg declared_type='NSURLCredential*' index='0' name='credential' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg declared_type='NSOutputStream*' index='0' name='outputStream' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg declared_type='NSSet*' index='0' name='runLoopModes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecurityPolicy:'>
<arg declared_type='AFSecurityPolicy*' index='0' name='securityPolicy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg declared_type='BOOL' index='0' name='shouldUseCredentialStorage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillSendRequestForAuthenticationChallengeBlock:'>
<arg declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AFURLSessionManager'>
<method selector='completionGroup'>
<retval declared_type='dispatch_group_t' type='@'/>
</method>
<method selector='completionQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='dataTaskWithRequest:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='dataTasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='downloadTaskWithRequest:progress:destination:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSProgress**' index='1' name='progress' type='^@'/>
<arg declared_type='NSURL *(^)(NSURL *, NSURLResponse *)' function_pointer='true' index='2' name='destination' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</arg>
<arg declared_type='void (^)(NSURLResponse *, NSURL *, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDownloadTask*' type='@'/>
</method>
<method selector='downloadTaskWithResumeData:progress:destination:completionHandler:'>
<arg declared_type='NSData*' index='0' name='resumeData' type='@'/>
<arg declared_type='NSProgress**' index='1' name='progress' type='^@'/>
<arg declared_type='NSURL *(^)(NSURL *, NSURLResponse *)' function_pointer='true' index='2' name='destination' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</arg>
<arg declared_type='void (^)(NSURLResponse *, NSURL *, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDownloadTask*' type='@'/>
</method>
<method selector='downloadTasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithSessionConfiguration:'>
<arg declared_type='NSURLSessionConfiguration*' index='0' name='configuration' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invalidateSessionCancelingTasks:'>
<arg declared_type='BOOL' index='0' name='cancelPendingTasks' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='reachabilityManager'>
<retval declared_type='AFNetworkReachabilityManager*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='securityPolicy'>
<retval declared_type='AFSecurityPolicy*' type='@'/>
</method>
<method selector='session'>
<retval declared_type='NSURLSession*' type='@'/>
</method>
<method selector='setCompletionGroup:'>
<arg declared_type='dispatch_group_t' index='0' name='completionGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='completionQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskDidBecomeDownloadTaskBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDataTask *, NSURLSessionDownloadTask *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskDidReceiveDataBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDataTask *, NSData *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskDidReceiveResponseBlock:'>
<arg declared_type='NSURLSessionResponseDisposition (^)(NSURLSession *, NSURLSessionDataTask *, NSURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLSessionResponseDisposition' type='i' type64='q'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskWillCacheResponseBlock:'>
<arg declared_type='NSCachedURLResponse *(^)(NSURLSession *, NSURLSessionDataTask *, NSCachedURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFinishEventsForBackgroundURLSessionBlock:'>
<arg declared_type='void (^)(NSURLSession *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadTaskDidFinishDownloadingBlock:'>
<arg declared_type='NSURL *(^)(NSURLSession *, NSURLSessionDownloadTask *, NSURL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadTaskDidResumeBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDownloadTask *, int64_t, int64_t)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadTaskDidWriteDataBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDownloadTask *, int64_t, int64_t, int64_t)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='id' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecurityPolicy:'>
<arg declared_type='AFSecurityPolicy*' index='0' name='securityPolicy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSessionDidBecomeInvalidBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSError *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSessionDidReceiveAuthenticationChallengeBlock:'>
<arg declared_type='NSURLSessionAuthChallengeDisposition (^)(NSURLSession *, NSURLAuthenticationChallenge *, NSURLCredential **)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<arg declared_type='NSURLCredential**' type='^@'/>
<retval declared_type='NSURLSessionAuthChallengeDisposition' type='i' type64='q'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskDidCompleteBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionTask *, NSError *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskDidReceiveAuthenticationChallengeBlock:'>
<arg declared_type='NSURLSessionAuthChallengeDisposition (^)(NSURLSession *, NSURLSessionTask *, NSURLAuthenticationChallenge *, NSURLCredential **)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<arg declared_type='NSURLCredential**' type='^@'/>
<retval declared_type='NSURLSessionAuthChallengeDisposition' type='i' type64='q'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskDidSendBodyDataBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionTask *, int64_t, int64_t, int64_t)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskWillPerformHTTPRedirectionBlock:'>
<arg declared_type='NSURLRequest *(^)(NSURLSession *, NSURLSessionTask *, NSURLResponse *, NSURLRequest *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='tasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='uploadTaskWithRequest:fromData:progress:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSData*' index='1' name='bodyData' type='@'/>
<arg declared_type='NSProgress**' index='2' name='progress' type='^@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionUploadTask*' type='@'/>
</method>
<method selector='uploadTaskWithRequest:fromFile:progress:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSProgress**' index='2' name='progress' type='^@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionUploadTask*' type='@'/>
</method>
<method selector='uploadTaskWithStreamedRequest:progress:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSProgress**' index='1' name='progress' type='^@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionUploadTask*' type='@'/>
</method>
<method selector='uploadTasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='ALAsset'>
<method selector='accessibilityLabel'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPhoto'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVideo'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='ALAssetsGroup'>
<method selector='isEqual:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='Appirater'>
<method class_method='true' selector='appEnteredForeground:'>
<arg declared_type='BOOL' index='0' name='canPromptForRating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='appLaunched'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='appLaunched:'>
<arg declared_type='BOOL' index='0' name='canPromptForRating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bundle'>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method class_method='true' selector='closeModal'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method class_method='true' selector='forceShowPrompt:'>
<arg declared_type='BOOL' index='0' name='displayRateLaterButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='openInAppStore'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='rateApp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='ratingAlert'>
<retval declared_type='UIAlertView*' type='@'/>
</method>
<method class_method='true' selector='setAlwaysUseMainBundle:'>
<arg declared_type='BOOL' index='0' name='useMainBundle' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAppId:'>
<arg declared_type='NSString*' index='0' name='appId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setCustomAlertCancelButtonTitle:'>
<arg declared_type='NSString*' index='0' name='cancelTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setCustomAlertMessage:'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setCustomAlertRateButtonTitle:'>
<arg declared_type='NSString*' index='0' name='rateTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setCustomAlertRateLaterButtonTitle:'>
<arg declared_type='NSString*' index='0' name='rateLaterTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setCustomAlertTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDaysUntilPrompt:'>
<arg declared_type='double' index='0' name='value' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDebug:'>
<arg declared_type='BOOL' index='0' name='debug' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='NSObject*' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setOpenInAppStore:'>
<arg declared_type='BOOL' index='0' name='openInAppStore' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpenInAppStore:'>
<arg declared_type='BOOL' index='0' name='openInAppStore' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRatingAlert:'>
<arg declared_type='UIAlertView*' index='0' name='ratingAlert' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSignificantEventsUntilPrompt:'>
<arg declared_type='NSInteger' index='0' name='value' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setTimeBeforeReminding:'>
<arg declared_type='double' index='0' name='value' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setUsesAnimation:'>
<arg declared_type='BOOL' index='0' name='animation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setUsesUntilPrompt:'>
<arg declared_type='NSInteger' index='0' name='value' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showPrompt'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='tryToShowPrompt'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='userDidSignificantEvent:'>
<arg declared_type='BOOL' index='0' name='canPromptForRating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='Bugsnag'>
<method class_method='true' selector='addAttribute:withValue:toTabWithName:'>
<arg declared_type='NSString*' index='0' name='attributeName' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='tabName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='clearTabWithName:'>
<arg declared_type='NSString*' index='0' name='tabName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='clearUser'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='configuration'>
<retval declared_type='BugsnagConfiguration*' type='@'/>
</method>
<method class_method='true' selector='instance'>
<retval declared_type='BugsnagConfiguration*' type='@'/>
</method>
<method class_method='true' selector='notifier'>
<retval declared_type='BugsnagNotifier*' type='@'/>
</method>
<method class_method='true' selector='notify:'>
<arg declared_type='NSException*' index='0' name='exception' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='notify:withData:'>
<arg declared_type='NSException*' index='0' name='exception' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='metaData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setUserAttribute:withValue:'>
<arg declared_type='NSString*' index='0' name='attributeName' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='startBugsnagWithApiKey:'>
<arg declared_type='NSString*' index='0' name='apiKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='BugsnagConfiguration'>
<method selector='apiKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='appData'>
<retval declared_type='BugsnagDictionary*' type='@'/>
</method>
<method selector='appVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='autoNotify'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beforeBugsnagNotifyBlocks'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='collectMAU'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='context'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deviceData'>
<retval declared_type='BugsnagDictionary*' type='@'/>
</method>
<method selector='enableSSL'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='metaData'>
<retval declared_type='BugsnagMetaData*' type='@'/>
</method>
<method selector='metricsURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='notifyEndpoint'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='notifyReleaseStages'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='notifyURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='osVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='releaseStage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setApiKey:'>
<arg declared_type='NSString*' index='0' name='apiKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppData:'>
<arg declared_type='BugsnagDictionary*' index='0' name='appData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppVersion:'>
<arg declared_type='NSString*' index='0' name='appVersion' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoNotify:'>
<arg declared_type='BOOL' index='0' name='autoNotify' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBeforeBugsnagNotifyBlocks:'>
<arg declared_type='NSMutableArray*' index='0' name='beforeBugsnagNotifyBlocks' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollectMAU:'>
<arg declared_type='BOOL' index='0' name='collectMAU' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContext:'>
<arg declared_type='NSString*' index='0' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeviceData:'>
<arg declared_type='BugsnagDictionary*' index='0' name='deviceData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableSSL:'>
<arg declared_type='BOOL' index='0' name='enableSSL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetaData:'>
<arg declared_type='BugsnagMetaData*' index='0' name='metaData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotifyEndpoint:'>
<arg declared_type='NSString*' index='0' name='notifyEndpoint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotifyReleaseStages:'>
<arg declared_type='NSArray*' index='0' name='notifyReleaseStages' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOsVersion:'>
<arg declared_type='NSString*' index='0' name='osVersion' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReleaseStage:'>
<arg declared_type='NSString*' index='0' name='releaseStage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUser:withName:andEmail:'>
<arg declared_type='NSString*' index='0' name='userId' type='@'/>
<arg declared_type='NSString*' index='1' name='userName' type='@'/>
<arg declared_type='NSString*' index='2' name='userEmail' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserData:'>
<arg declared_type='BugsnagDictionary*' index='0' name='userData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserEmail:'>
<arg declared_type='NSString*' index='0' name='userEmail' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserId:'>
<arg declared_type='NSString*' index='0' name='userId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserName:'>
<arg declared_type='NSString*' index='0' name='userName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUuidPath:'>
<arg declared_type='NSString*' index='0' name='uuidPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userData'>
<retval declared_type='BugsnagDictionary*' type='@'/>
</method>
<method selector='userEmail'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='userId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='userName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='uuidPath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='BugsnagDictionary'>
<method selector='addEntriesFromDictionary:'>
<arg declared_type='BugsnagDictionary*' index='0' name='dictionary' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='data'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='initWithMutableDictionary:'>
<arg declared_type='NSMutableDictionary*' index='0' name='dictionary' type='@'/>
<retval declared_type='BugsnagDictionary*' type='@'/>
</method>
<method selector='objectForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setData:'>
<arg declared_type='NSMutableDictionary*' index='0' name='data' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObject:forKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='BugsnagEvent'>
<method selector='addAttribute:withValue:toTabWithName:'>
<arg declared_type='NSString*' index='0' name='attributeName' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='tabName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addException:'>
<arg declared_type='NSException*' index='0' name='exception' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSignal:'>
<arg declared_type='int' index='0' name='signal' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appState'>
<retval declared_type='BugsnagDictionary*' type='@'/>
</method>
<method selector='clearTabWithName:'>
<arg declared_type='NSString*' index='0' name='tabName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearUser'>
<retval declared_type='void' type='v'/>
</method>
<method selector='context'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deviceState'>
<retval declared_type='BugsnagDictionary*' type='@'/>
</method>
<method selector='getStackTraceWithException:'>
<arg declared_type='NSException*' index='0' name='exception' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithConfiguration:andMetaData:'>
<arg declared_type='BugsnagConfiguration*' index='0' name='configuration' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='metaData' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='loadedImages'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='metaData'>
<retval declared_type='BugsnagMetaData*' type='@'/>
</method>
<method selector='setAppState:'>
<arg declared_type='BugsnagDictionary*' index='0' name='appState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContext:'>
<arg declared_type='NSString*' index='0' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeviceState:'>
<arg declared_type='BugsnagDictionary*' index='0' name='deviceState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetaData:'>
<arg declared_type='BugsnagMetaData*' index='0' name='metaData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeverity:'>
<arg declared_type='NSString*' index='0' name='severity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserAttribute:withValue:'>
<arg declared_type='NSString*' index='0' name='attributeName' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='severity'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='toDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='BugsnagMetaData'>
<method selector='addAttribute:withValue:toTabWithName:'>
<arg declared_type='NSString*' index='0' name='attributeName' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<arg declared_type='NSString*' index='2' name='tabName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearTab:'>
<arg declared_type='NSString*' index='0' name='tabName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getTab:'>
<arg declared_type='NSString*' index='0' name='tabName' type='@'/>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg declared_type='NSMutableDictionary*' index='0' name='dict' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mergeWith:'>
<arg declared_type='NSDictionary*' index='0' name='data' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='BugsnagNotifier'>
<method selector='beforeNotify:'>
<arg declared_type='BugsnagNotifyBlock' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='BugsnagEvent*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='buildNotifyPayload'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='collectAppData'>
<retval declared_type='BugsnagDictionary*' type='@'/>
</method>
<method selector='collectAppState'>
<retval declared_type='BugsnagDictionary*' type='@'/>
</method>
<method selector='collectDeviceData'>
<retval declared_type='BugsnagDictionary*' type='@'/>
</method>
<method selector='collectDeviceState'>
<retval declared_type='BugsnagDictionary*' type='@'/>
</method>
<method selector='configuration'>
<retval declared_type='BugsnagConfiguration*' type='@'/>
</method>
<method selector='errorPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='generateEventFilename'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithConfiguration:'>
<arg declared_type='BugsnagConfiguration*' index='0' name='configuration' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='notifierName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='notifierURL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='notifierVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='notifyException:withData:atSeverity:inBackground:'>
<arg declared_type='NSException*' index='0' name='exception' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='metaData' type='@'/>
<arg declared_type='NSString*' index='2' name='severity' type='@'/>
<arg declared_type='BOOL' index='3' name='inBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='notifySignal:'>
<arg declared_type='int' index='0' name='signal' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='notifyUncaughtException:'>
<arg declared_type='NSException*' index='0' name='exception' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveEvent:'>
<arg declared_type='BugsnagEvent*' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='savedEvents'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sendSavedEvents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConfiguration:'>
<arg declared_type='BugsnagConfiguration*' index='0' name='configuration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setErrorPath:'>
<arg declared_type='NSString*' index='0' name='errorPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotifierName:'>
<arg declared_type='NSString*' index='0' name='notifierName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotifierURL:'>
<arg declared_type='NSString*' index='0' name='notifierURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotifierVersion:'>
<arg declared_type='NSString*' index='0' name='notifierVersion' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserUUID:'>
<arg declared_type='NSString*' index='0' name='userUUID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldAutoNotify'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldNotify'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='start'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userUUID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='BugsnagReachability'>
<method selector='connectionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentReachabilityFlags'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='currentReachabilityStatus'>
<retval declared_type='BugsnagNetworkStatus' type='i' type64='q'/>
</method>
<method selector='currentReachabilityString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithReachabilityRef:'>
<arg declared_type='SCNetworkReachabilityRef' index='0' name='ref' type='^{__SCNetworkReachability=}'/>
<retval declared_type='BugsnagReachability*' type='@'/>
</method>
<method selector='isConnectionOnDemand'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isConnectionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInterventionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWiFi'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reachabilityFlags'>
<retval declared_type='SCNetworkReachabilityFlags' type='I'/>
</method>
<method class_method='true' selector='reachabilityForInternetConnection'>
<retval declared_type='BugsnagReachability*' type='@'/>
</method>
<method class_method='true' selector='reachabilityForLocalWiFi'>
<retval declared_type='BugsnagReachability*' type='@'/>
</method>
<method class_method='true' selector='reachabilityWithAddress:'>
<arg const='true' declared_type='struct sockaddr_in*' index='0' name='hostAddress' type='^{sockaddr_in=CCS{in_addr=I}[8c]}'/>
<retval declared_type='BugsnagReachability*' type='@'/>
</method>
<method class_method='true' selector='reachabilityWithHostname:'>
<arg declared_type='NSString*' index='0' name='hostname' type='@'/>
<retval declared_type='BugsnagReachability*' type='@'/>
</method>
<method selector='reachableBlock'>
<retval declared_type='BugsnagNetworkReachable' function_pointer='true' type='@?'>
<arg declared_type='BugsnagReachability*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='reachableOnWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setReachableBlock:'>
<arg declared_type='BugsnagNetworkReachable' function_pointer='true' index='0' name='reachableBlock' type='@?'>
<arg declared_type='BugsnagReachability*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachableOnWWAN:'>
<arg declared_type='BOOL' index='0' name='reachableOnWWAN' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnreachableBlock:'>
<arg declared_type='BugsnagNetworkUnreachable' function_pointer='true' index='0' name='unreachableBlock' type='@?'>
<arg declared_type='BugsnagReachability*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='startNotifier'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopNotifier'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unreachableBlock'>
<retval declared_type='BugsnagNetworkUnreachable' function_pointer='true' type='@?'>
<arg declared_type='BugsnagReachability*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
</class>
<class name='CEBaseInteractionController'>
<method selector='interactionInProgress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setInteractionInProgress:'>
<arg declared_type='BOOL' index='0' name='interactionInProgress' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wireToViewController:forOperation:'>
<arg declared_type='UIViewController*' index='0' name='viewController' type='@'/>
<arg declared_type='CEInteractionOperation' index='1' name='operation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CECubeAnimationController'>
<method selector='cubeAnimationType'>
<retval declared_type='CubeAnimationType' type='i'/>
</method>
<method selector='cubeAnimationWay'>
<retval declared_type='CubeAnimationWay' type='i'/>
</method>
<method selector='setCubeAnimationType:'>
<arg declared_type='CubeAnimationType' index='0' name='cubeAnimationType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCubeAnimationWay:'>
<arg declared_type='CubeAnimationWay' index='0' name='cubeAnimationWay' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CEFoldAnimationController'>
<method selector='folds'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setFolds:'>
<arg declared_type='NSUInteger' index='0' name='folds' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CEHorizontalSwipeInteractionController'>
<method selector='popOnRightToLeft'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPopOnRightToLeft:'>
<arg declared_type='BOOL' index='0' name='popOnRightToLeft' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CEReversibleAnimationController'>
<method selector='animateTransition:fromVC:toVC:fromView:toView:'>
<arg declared_type='id' index='0' name='transitionContext' type='@'/>
<arg declared_type='UIViewController*' index='1' name='fromVC' type='@'/>
<arg declared_type='UIViewController*' index='2' name='toVC' type='@'/>
<arg declared_type='UIView*' index='3' name='fromView' type='@'/>
<arg declared_type='UIView*' index='4' name='toView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='reverse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReverse:'>
<arg declared_type='BOOL' index='0' name='reverse' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CETurnAnimationController'>
<method selector='flipDirection'>
<retval declared_type='CEDirection' type='i' type64='q'/>
</method>
<method selector='setFlipDirection:'>
<arg declared_type='CEDirection' index='0' name='flipDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CTAssetItemViewController'>
<method class_method='true' selector='assetItemViewControllerForPageIndex:'>
<arg declared_type='NSInteger' index='0' name='pageIndex' type='i' type64='q'/>
<retval declared_type='CTAssetItemViewController*' type='@'/>
</method>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pageIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPageIndex:'>
<arg declared_type='NSInteger' index='0' name='pageIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CTAssetScrollView'>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='index'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CTAssetsGroupViewCell'>
<method selector='bind:showNumberOfAssets:'>
<arg declared_type='ALAssetsGroup*' index='0' name='assetsGroup' type='@'/>
<arg declared_type='BOOL' index='1' name='showNumberOfAssets' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CTAssetsPageViewController'>
<method selector='initWithAssets:'>
<arg declared_type='NSArray*' index='0' name='assets' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pageIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setPageIndex:'>
<arg declared_type='NSInteger' index='0' name='pageIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CTAssetsPickerController'>
<method selector='alwaysEnableDoneButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsFilter'>
<retval declared_type='ALAssetsFilter*' type='@'/>
</method>
<method selector='assetsLibrary'>
<retval declared_type='ALAssetsLibrary*' type='@'/>
</method>
<method selector='childNavigationController'>
<retval declared_type='UINavigationController*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deselectAsset:'>
<arg declared_type='ALAsset*' index='0' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectAsset:'>
<arg declared_type='ALAsset*' index='0' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedAssets'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='setAlwaysEnableDoneButton:'>
<arg declared_type='BOOL' index='0' name='alwaysEnableDoneButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAssetsFilter:'>
<arg declared_type='ALAssetsFilter*' index='0' name='assetsFilter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAssetsLibrary:'>
<arg declared_type='ALAssetsLibrary*' index='0' name='assetsLibrary' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedAssets:'>
<arg declared_type='NSMutableArray*' index='0' name='selectedAssets' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsCancelButton:'>
<arg declared_type='BOOL' index='0' name='showsCancelButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsNumberOfAssets:'>
<arg declared_type='BOOL' index='0' name='showsNumberOfAssets' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsCancelButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsNumberOfAssets'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CTAssetsSupplementaryView'>
<method selector='bind:'>
<arg declared_type='NSArray*' index='0' name='assets' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='label'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='setLabel:'>
<arg declared_type='UILabel*' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CTAssetsViewCell'>
<method selector='bind:'>
<arg declared_type='ALAsset*' index='0' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CTAssetsViewController'>
<method selector='assetsGroup'>
<retval declared_type='ALAssetsGroup*' type='@'/>
</method>
<method selector='setAssetsGroup:'>
<arg declared_type='ALAssetsGroup*' index='0' name='assetsGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CTAssetsViewControllerTransition'>
<method selector='operation'>
<retval declared_type='UINavigationControllerOperation' type='i' type64='q'/>
</method>
<method selector='setOperation:'>
<arg declared_type='UINavigationControllerOperation' index='0' name='operation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DTError'>
<method class_method='true' selector='throwBadTypeException:expectedClass:'>
<arg declared_type='id' index='0' name='obj' type='@'/>
<arg declared_type='Class' index='1' name='classType' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='throwInsertOutOfBoundsException:array:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<arg declared_type='NSArray*' index='1' name='array' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='throwRemoveOutOfBoundsException:array:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<arg declared_type='NSArray*' index='1' name='array' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DTTimePeriod'>
<method selector='EndDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='StartDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='contains:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsDate:interval:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<arg declared_type='DTTimePeriodInterval' index='1' name='interval' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='copy'>
<retval declared_type='DTTimePeriod*' type='@'/>
</method>
<method selector='durationInDays'>
<retval declared_type='double' type='d'/>
</method>
<method selector='durationInHours'>
<retval declared_type='double' type='d'/>
</method>
<method selector='durationInMinutes'>
<retval declared_type='double' type='d'/>
</method>
<method selector='durationInSeconds'>
<retval declared_type='double' type='d'/>
</method>
<method selector='durationInWeeks'>
<retval declared_type='double' type='d'/>
</method>
<method selector='durationInYears'>
<retval declared_type='double' type='d'/>
</method>
<method selector='gapBetween:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='hasEndDate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasStartDate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithStartDate:endDate:'>
<arg declared_type='NSDate*' index='0' name='startDate' type='@'/>
<arg declared_type='NSDate*' index='1' name='endDate' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intersects:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToPeriod:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInside:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMoment'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lengthenWithAnchorDate:size:'>
<arg declared_type='DTTimePeriodAnchor' index='0' name='anchor' type='I' type64='Q'/>
<arg declared_type='DTTimePeriodSize' index='1' name='size' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lengthenWithAnchorDate:size:amount:'>
<arg declared_type='DTTimePeriodAnchor' index='0' name='anchor' type='I' type64='Q'/>
<arg declared_type='DTTimePeriodSize' index='1' name='size' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='2' name='amount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='overlapsWith:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='relationToPeriod:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='DTTimePeriodRelation' type='I' type64='Q'/>
</method>
<method selector='setEndDate:'>
<arg declared_type='NSDate*' index='0' name='EndDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartDate:'>
<arg declared_type='NSDate*' index='0' name='StartDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftEarlierWithSize:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftEarlierWithSize:amount:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='1' name='amount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftLaterWithSize:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftLaterWithSize:amount:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='1' name='amount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shortenWithAnchorDate:size:'>
<arg declared_type='DTTimePeriodAnchor' index='0' name='anchor' type='I' type64='Q'/>
<arg declared_type='DTTimePeriodSize' index='1' name='size' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shortenWithAnchorDate:size:amount:'>
<arg declared_type='DTTimePeriodAnchor' index='0' name='anchor' type='I' type64='Q'/>
<arg declared_type='DTTimePeriodSize' index='1' name='size' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='2' name='amount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='timePeriodWithAllTime'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='timePeriodWithSize:amount:endingAt:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='1' name='amount' type='i' type64='q'/>
<arg declared_type='NSDate*' index='2' name='date' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='timePeriodWithSize:amount:startingAt:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='1' name='amount' type='i' type64='q'/>
<arg declared_type='NSDate*' index='2' name='date' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='timePeriodWithSize:endingAt:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<arg declared_type='NSDate*' index='1' name='date' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='timePeriodWithSize:startingAt:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<arg declared_type='NSDate*' index='1' name='date' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='timePeriodWithStartDate:endDate:'>
<arg declared_type='NSDate*' index='0' name='startDate' type='@'/>
<arg declared_type='NSDate*' index='1' name='endDate' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DTTimePeriodChain'>
<method selector='First'>
<retval declared_type='DTTimePeriod*' type='@'/>
</method>
<method selector='Last'>
<retval declared_type='DTTimePeriod*' type='@'/>
</method>
<method selector='addTimePeriod:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='chain'>
<retval declared_type='DTTimePeriodChain*' type='@'/>
</method>
<method selector='insertTimePeriod:atInedx:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEqualToChain:'>
<arg declared_type='DTTimePeriodChain*' index='0' name='chain' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeEarliestTimePeriod'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLatestTimePeriod'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTimePeriodAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateVariables'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DTTimePeriodCollection'>
<method selector='addTimePeriod:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='collection'>
<retval declared_type='DTTimePeriodCollection*' type='@'/>
</method>
<method selector='copy'>
<retval declared_type='DTTimePeriodCollection*' type='@'/>
</method>
<method selector='insertTimePeriod:atIndex:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEqualToCollection:considerOrder:'>
<arg declared_type='DTTimePeriodCollection*' index='0' name='collection' type='@'/>
<arg declared_type='BOOL' index='1' name='considerOrder' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='periodsInside:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='DTTimePeriodCollection*' type='@'/>
</method>
<method selector='periodsIntersectedByDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='DTTimePeriodCollection*' type='@'/>
</method>
<method selector='periodsIntersectedByPeriod:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='DTTimePeriodCollection*' type='@'/>
</method>
<method selector='periodsOverlappedByPeriod:'>
<arg declared_type='DTTimePeriod*' index='0' name='period' type='@'/>
<retval declared_type='DTTimePeriodCollection*' type='@'/>
</method>
<method selector='removeTimePeriodAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortByDurationAscending'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortByDurationDescending'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortByEndAscending'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortByEndDescending'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortByStartAscending'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortByStartDescending'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateVariables'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DTTimePeriodGroup'>
<method selector='EndDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='StartDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='durationInDays'>
<retval declared_type='double' type='d'/>
</method>
<method selector='durationInHours'>
<retval declared_type='double' type='d'/>
</method>
<method selector='durationInMinutes'>
<retval declared_type='double' type='d'/>
</method>
<method selector='durationInSeconds'>
<retval declared_type='double' type='d'/>
</method>
<method selector='durationInWeeks'>
<retval declared_type='double' type='d'/>
</method>
<method selector='durationInYears'>
<retval declared_type='double' type='d'/>
</method>
<method selector='hasSameCharacteristicsAs:'>
<arg declared_type='DTTimePeriodGroup*' index='0' name='group' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg declared_type='id' index='0' name='obj' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftEarlierWithSize:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftEarlierWithSize:amount:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='1' name='amount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftLaterWithSize:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftLaterWithSize:amount:'>
<arg declared_type='DTTimePeriodSize' index='0' name='size' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='1' name='amount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateVariables'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GAI'>
<method selector='defaultTracker'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dispatch'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='dispatchWithCompletionHandler:'>
<arg declared_type='void (^)(GAIDispatchResult)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='GAIDispatchResult' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='dryRun'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logger'>
<retval declared_type='id' type='@'/>
</method>
<method selector='optOut'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeTrackerByName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultTracker:'>
<arg declared_type='id' index='0' name='defaultTracker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDispatchInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='dispatchInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDryRun:'>
<arg declared_type='BOOL' index='0' name='dryRun' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLogger:'>
<arg declared_type='id' index='0' name='logger' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOptOut:'>
<arg declared_type='BOOL' index='0' name='optOut' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrackUncaughtExceptions:'>
<arg declared_type='BOOL' index='0' name='trackUncaughtExceptions' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='GAI*' type='@'/>
</method>
<method selector='trackUncaughtExceptions'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='trackerWithName:trackingId:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSString*' index='1' name='trackingId' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='trackerWithTrackingId:'>
<arg declared_type='NSString*' index='0' name='trackingId' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GAIDictionaryBuilder'>
<method selector='addProduct:'>
<arg declared_type='GAIEcommerceProduct*' index='0' name='product' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method selector='addProductImpression:impressionList:impressionSource:'>
<arg declared_type='GAIEcommerceProduct*' index='0' name='product' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='source' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method selector='addPromotion:'>
<arg declared_type='GAIEcommercePromotion*' index='0' name='promotion' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method selector='build'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method class_method='true' selector='createAppView'>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method class_method='true' selector='createEventWithCategory:action:label:value:'>
<arg declared_type='NSString*' index='0' name='category' type='@'/>
<arg declared_type='NSString*' index='1' name='action' type='@'/>
<arg declared_type='NSString*' index='2' name='label' type='@'/>
<arg declared_type='NSNumber*' index='3' name='value' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method class_method='true' selector='createExceptionWithDescription:withFatal:'>
<arg declared_type='NSString*' index='0' name='description' type='@'/>
<arg declared_type='NSNumber*' index='1' name='fatal' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method class_method='true' selector='createItemWithTransactionId:name:sku:category:price:quantity:currencyCode:'>
<arg declared_type='NSString*' index='0' name='transactionId' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='sku' type='@'/>
<arg declared_type='NSString*' index='3' name='category' type='@'/>
<arg declared_type='NSNumber*' index='4' name='price' type='@'/>
<arg declared_type='NSNumber*' index='5' name='quantity' type='@'/>
<arg declared_type='NSString*' index='6' name='currencyCode' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method class_method='true' selector='createScreenView'>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method class_method='true' selector='createSocialWithNetwork:action:target:'>
<arg declared_type='NSString*' index='0' name='network' type='@'/>
<arg declared_type='NSString*' index='1' name='action' type='@'/>
<arg declared_type='NSString*' index='2' name='target' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method class_method='true' selector='createTimingWithCategory:interval:name:label:'>
<arg declared_type='NSString*' index='0' name='category' type='@'/>
<arg declared_type='NSNumber*' index='1' name='intervalMillis' type='@'/>
<arg declared_type='NSString*' index='2' name='name' type='@'/>
<arg declared_type='NSString*' index='3' name='label' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method class_method='true' selector='createTransactionWithId:affiliation:revenue:tax:shipping:currencyCode:'>
<arg declared_type='NSString*' index='0' name='transactionId' type='@'/>
<arg declared_type='NSString*' index='1' name='affiliation' type='@'/>
<arg declared_type='NSNumber*' index='2' name='revenue' type='@'/>
<arg declared_type='NSNumber*' index='3' name='tax' type='@'/>
<arg declared_type='NSNumber*' index='4' name='shipping' type='@'/>
<arg declared_type='NSString*' index='5' name='currencyCode' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method selector='get:'>
<arg declared_type='NSString*' index='0' name='paramName' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='set:forKey:'>
<arg declared_type='NSString*' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method selector='setAll:'>
<arg declared_type='NSDictionary*' index='0' name='params' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method selector='setCampaignParametersFromUrl:'>
<arg declared_type='NSString*' index='0' name='urlString' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
<method selector='setProductAction:'>
<arg declared_type='GAIEcommerceProductAction*' index='0' name='productAction' type='@'/>
<retval declared_type='GAIDictionaryBuilder*' type='@'/>
</method>
</class>
<class name='GAIEcommerceFields'>
<method class_method='true' selector='impressionListForIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='productFieldForIndex:suffix:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSString*' index='1' name='suffix' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='productImpressionForList:index:suffix:'>
<arg declared_type='NSString*' index='0' name='list' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<arg declared_type='NSString*' index='2' name='Suffix' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='promotionForIndex:suffix:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSString*' index='1' name='suffix' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='GAIEcommerceProduct'>
<method selector='buildWithIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='buildWithListIndex:index:'>
<arg declared_type='NSUInteger' index='0' name='lIndex' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setBrand:'>
<arg declared_type='NSString*' index='0' name='productBrand' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
<method selector='setCategory:'>
<arg declared_type='NSString*' index='0' name='productCategory' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
<method selector='setCouponCode:'>
<arg declared_type='NSString*' index='0' name='productCouponCode' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
<method selector='setCustomDimension:value:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSString*' index='1' name='value' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
<method selector='setCustomMetric:value:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSNumber*' index='1' name='value' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
<method selector='setId:'>
<arg declared_type='NSString*' index='0' name='productId' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' index='0' name='productName' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
<method selector='setPosition:'>
<arg declared_type='NSNumber*' index='0' name='productPosition' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
<method selector='setPrice:'>
<arg declared_type='NSNumber*' index='0' name='productPrice' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
<method selector='setQuantity:'>
<arg declared_type='NSNumber*' index='0' name='productQuantity' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
<method selector='setVariant:'>
<arg declared_type='NSString*' index='0' name='productVariant' type='@'/>
<retval declared_type='GAIEcommerceProduct*' type='@'/>
</method>
</class>
<class name='GAIEcommerceProductAction'>
<method selector='build'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setAction:'>
<arg declared_type='NSString*' index='0' name='productAction' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
<method selector='setAffiliation:'>
<arg declared_type='NSString*' index='0' name='affiliation' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
<method selector='setCheckoutOption:'>
<arg declared_type='NSString*' index='0' name='checkoutOption' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
<method selector='setCheckoutStep:'>
<arg declared_type='NSNumber*' index='0' name='checkoutStep' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
<method selector='setCouponCode:'>
<arg declared_type='NSString*' index='0' name='couponCode' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
<method selector='setProductActionList:'>
<arg declared_type='NSString*' index='0' name='productActionList' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
<method selector='setProductListSource:'>
<arg declared_type='NSString*' index='0' name='productListSource' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
<method selector='setRevenue:'>
<arg declared_type='NSNumber*' index='0' name='revenue' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
<method selector='setShipping:'>
<arg declared_type='NSNumber*' index='0' name='shipping' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
<method selector='setTax:'>
<arg declared_type='NSNumber*' index='0' name='tax' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
<method selector='setTransactionId:'>
<arg declared_type='NSString*' index='0' name='transactionId' type='@'/>
<retval declared_type='GAIEcommerceProductAction*' type='@'/>
</method>
</class>
<class name='GAIEcommercePromotion'>
<method selector='buildWithIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setCreative:'>
<arg declared_type='NSString*' index='0' name='creative' type='@'/>
<retval declared_type='GAIEcommercePromotion*' type='@'/>
</method>
<method selector='setId:'>
<arg declared_type='NSString*' index='0' name='pid' type='@'/>
<retval declared_type='GAIEcommercePromotion*' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='GAIEcommercePromotion*' type='@'/>
</method>
<method selector='setPosition:'>
<arg declared_type='NSString*' index='0' name='position' type='@'/>
<retval declared_type='GAIEcommercePromotion*' type='@'/>
</method>
</class>
<class name='GAIFields'>
<method class_method='true' selector='contentGroupForIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='customDimensionForIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='customMetricForIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='GAITrackedViewController'>
<method selector='screenName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setScreenName:'>
<arg declared_type='NSString*' index='0' name='screenName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTracker:'>
<arg declared_type='id' index='0' name='tracker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tracker'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='HNKCache'>
<method selector='fetchImageForFetcher:formatName:success:failure:'>
<arg declared_type='id' index='0' name='fetcher' type='@'/>
<arg declared_type='NSString*' index='1' name='formatName' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='2' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='3' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fetchImageForKey:formatName:success:failure:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSString*' index='1' name='formatName' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='2' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='3' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='formats'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initWithName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='registerFormat:'>
<arg declared_type='HNKCacheFormat*' index='0' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='registerSharedFormat:'>
<arg declared_type='HNKCacheFormat*' index='0' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllImages'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeImagesForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeImagesOfFormatNamed:'>
<arg declared_type='NSString*' index='0' name='formatName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:forKey:formatName:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='NSString*' index='2' name='formatName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedCache'>
<retval declared_type='HNKCache*' type='@'/>
</method>
<method class_method='true' selector='sharedFormatWithSize:scaleMode:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='HNKScaleMode' index='1' name='scaleMode' type='i' type64='q'/>
<retval declared_type='HNKCacheFormat*' type='@'/>
</method>
</class>
<class name='HNKCacheFormat'>
<method selector='allowUpscaling'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compressionQuality'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='diskCapacity'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='diskSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='initWithName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='postResizeBlock'>
<retval declared_type='UIImage *(^)(NSString *, UIImage *)' function_pointer='true' type='@?'>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</retval>
</method>
<method selector='preResizeBlock'>
<retval declared_type='UIImage *(^)(NSString *, UIImage *)' function_pointer='true' type='@?'>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</retval>
</method>
<method selector='preloadPolicy'>
<retval declared_type='HNKPreloadPolicy' type='i' type64='q'/>
</method>
<method selector='resizedImageFromImage:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='scaleMode'>
<retval declared_type='HNKScaleMode' type='i' type64='q'/>
</method>
<method selector='setAllowUpscaling:'>
<arg declared_type='BOOL' index='0' name='allowUpscaling' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompressionQuality:'>
<arg declared_type='CGFloat' index='0' name='compressionQuality' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDiskCapacity:'>
<arg declared_type='unsigned long long' index='0' name='diskCapacity' type='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostResizeBlock:'>
<arg declared_type='UIImage *(^)(NSString *, UIImage *)' function_pointer='true' index='0' name='postResizeBlock' type='@?'>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreResizeBlock:'>
<arg declared_type='UIImage *(^)(NSString *, UIImage *)' function_pointer='true' index='0' name='preResizeBlock' type='@?'>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreloadPolicy:'>
<arg declared_type='HNKPreloadPolicy' index='0' name='preloadPolicy' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleMode:'>
<arg declared_type='HNKScaleMode' index='0' name='scaleMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='HNKDiskCache'>
<method selector='capacity'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='enumerateDataByAccessDateUsingBlock:'>
<arg declared_type='void (^)(NSString *, NSData *, NSDate *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<arg declared_type='NSDate*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='fetchDataForKey:success:failure:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='void (^)(NSData *)' function_pointer='true' index='1' name='successBlock' type='@?'>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='2' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithDirectory:capacity:'>
<arg declared_type='NSString*' index='0' name='directory' type='@'/>
<arg declared_type='unsigned long long' index='1' name='capacity' type='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='queue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='removeAllData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeDataForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCapacity:'>
<arg declared_type='unsigned long long' index='0' name='capacity' type='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setData:forKey:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='updateAccessDateForKey:data:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSData *(^)()' function_pointer='true' index='1' name='lazyData' type='@?'>
<retval declared_type='NSData*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='HNKDiskFetcher'>
<method selector='cancelFetch'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='HNKNetworkFetcher'>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLSession'>
<retval declared_type='NSURLSession*' type='@'/>
</method>
<method selector='cancelFetch'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='HNKSimpleFetcher'>
<method selector='initWithKey:image:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='UIImage*' index='1' name='image' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='ISO8601DateFormatter'>
<method selector='dateComponentsFromString:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateComponentsFromString:timeZone:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='NSTimeZone**' index='1' name='outTimeZone' type='^@' type_modifier='o'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateComponentsFromString:timeZone:range:fractionOfSecond:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='NSTimeZone**' index='1' name='outTimeZone' type='^@' type_modifier='o'/>
<arg declared_type='NSRange*' index='2' name='outRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' type_modifier='o'/>
<arg declared_type='NSTimeInterval*' index='3' name='outFractionOfSecond' type='^d'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateFromString:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateFromString:timeZone:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='NSTimeZone**' index='1' name='outTimeZone' type='^@' type_modifier='o'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateFromString:timeZone:range:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='NSTimeZone**' index='1' name='outTimeZone' type='^@' type_modifier='o'/>
<arg declared_type='NSRange*' index='2' name='outRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' type_modifier='o'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='defaultTimeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method selector='format'>
<retval declared_type='ISO8601DateFormat' type='I' type64='Q'/>
</method>
<method selector='includeTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parsesStrictly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDefaultTimeZone:'>
<arg declared_type='NSTimeZone*' index='0' name='defaultTimeZone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormat:'>
<arg declared_type='ISO8601DateFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeTime:'>
<arg declared_type='BOOL' index='0' name='includeTime' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParsesStrictly:'>
<arg declared_type='BOOL' index='0' name='parsesStrictly' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeSeparator:'>
<arg declared_type='unichar' index='0' name='timeSeparator' type='S'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZoneSeparator:'>
<arg declared_type='unichar' index='0' name='timeZoneSeparator' type='S'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringFromDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromDate:timeZone:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<arg declared_type='NSTimeZone*' index='1' name='timeZone' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeSeparator'>
<retval declared_type='unichar' type='S'/>
</method>
<method selector='timeZoneSeparator'>
<retval declared_type='unichar' type='S'/>
</method>
</class>
<class name='KGNoise'>
<method class_method='true' selector='drawNoiseWithOpacity:'>
<arg declared_type='CGFloat' index='0' name='opacity' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='drawNoiseWithOpacity:andBlendMode:'>
<arg declared_type='CGFloat' index='0' name='opacity' type='f' type64='d'/>
<arg declared_type='CGBlendMode' index='1' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='KGNoiseLinearGradientView'>
<method selector='alternateBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='gradientDirection'>
<retval declared_type='KGLinearGradientDirection' type='I' type64='Q'/>
</method>
<method selector='setAlternateBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='alternateBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGradientDirection:'>
<arg declared_type='KGLinearGradientDirection' index='0' name='gradientDirection' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='KGNoiseRadialGradientView'>
<method selector='alternateBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setAlternateBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='alternateBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='KGNoiseView'>
<method selector='noiseBlendMode'>
<retval declared_type='CGBlendMode' type='i'/>
</method>
<method selector='noiseOpacity'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setNoiseBlendMode:'>
<arg declared_type='CGBlendMode' index='0' name='noiseBlendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoiseOpacity:'>
<arg declared_type='CGFloat' index='0' name='noiseOpacity' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPABTestDesignerChangeResponseMessage'>
<method class_method='true' selector='message'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setStatus:'>
<arg declared_type='NSString*' index='0' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='status'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPABTestDesignerClearResponseMessage'>
<method class_method='true' selector='message'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setStatus:'>
<arg declared_type='NSString*' index='0' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='status'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPABTestDesignerConnection'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='connected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:connectCallback:disconnectCallback:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='void (^)()' function_pointer='true' index='1' name='connectCallback' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)()' function_pointer='true' index='2' name='disconnectCallback' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='sendMessage:'>
<arg declared_type='id' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sessionEnded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sessionObjectForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setSessionEnded:'>
<arg declared_type='BOOL' index='0' name='sessionEnded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSessionObject:forKey:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPABTestDesignerDeviceInfoResponseMessage'>
<method selector='appRelease'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='appVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='availableFontFamilies'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='deviceModel'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deviceName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='libVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mainBundleIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='message'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAppRelease:'>
<arg declared_type='NSString*' index='0' name='appRelease' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppVersion:'>
<arg declared_type='NSString*' index='0' name='appVersion' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAvailableFontFamilies:'>
<arg declared_type='NSArray*' index='0' name='availableFontFamilies' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeviceModel:'>
<arg declared_type='NSString*' index='0' name='deviceModel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeviceName:'>
<arg declared_type='NSString*' index='0' name='deviceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLibVersion:'>
<arg declared_type='NSString*' index='0' name='libVersion' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMainBundleIdentifier:'>
<arg declared_type='NSString*' index='0' name='mainBundleIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSystemName:'>
<arg declared_type='NSString*' index='0' name='systemName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSystemVersion:'>
<arg declared_type='NSString*' index='0' name='systemVersion' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTweaks:'>
<arg declared_type='NSArray*' index='0' name='tweaks' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='systemName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='systemVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='tweaks'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='MPABTestDesignerSnapshotRequestMessage'>
<method selector='configuration'>
<retval declared_type='MPObjectSerializerConfig*' type='@'/>
</method>
<method class_method='true' selector='message'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='MPABTestDesignerSnapshotResponseMessage'>
<method selector='imageHash'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='message'>
<retval declared_type='id' type='@'/>
</method>
<method selector='screenshot'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='serializedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setImageHash:'>
<arg declared_type='NSString*' index='0' name='imageHash' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScreenshot:'>
<arg declared_type='UIImage*' index='0' name='screenshot' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSerializedObjects:'>
<arg declared_type='NSDictionary*' index='0' name='serializedObjects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPABTestDesignerTweakResponseMessage'>
<method class_method='true' selector='message'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setStatus:'>
<arg declared_type='NSString*' index='0' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='status'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPAbstractABTestDesignerMessage'>
<method selector='JSONData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='initWithType:'>
<arg declared_type='NSString*' index='0' name='type' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithType:payload:'>
<arg declared_type='NSString*' index='0' name='type' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='payload' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='messageWithType:payload:'>
<arg declared_type='NSString*' index='0' name='type' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='payload' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='payload'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='payloadObjectForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPayloadObject:forKey:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPApplicationStateSerializer'>
<method selector='initWithApplication:configuration:objectIdentityProvider:'>
<arg declared_type='UIApplication*' index='0' name='application' type='@'/>
<arg declared_type='MPObjectSerializerConfig*' index='1' name='configuration' type='@'/>
<arg declared_type='MPObjectIdentityProvider*' index='2' name='objectIdentityProvider' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectHierarchyForWindowAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='screenshotImageForWindowAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</class>
<class name='MPClassDescription'>
<method selector='delegateInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithSuperclassDescription:dictionary:'>
<arg declared_type='MPClassDescription*' index='0' name='superclassDescription' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='dictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isDescriptionForKindOfClass:'>
<arg declared_type='Class' index='0' name='class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='propertyDescriptions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='superclassDescription'>
<retval declared_type='MPClassDescription*' type='@'/>
</method>
</class>
<class name='MPDelegateInfo'>
<method selector='initWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='dictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='selectorName'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPDesignerEventBindingResponseMesssage'>
<method class_method='true' selector='message'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setStatus:'>
<arg declared_type='NSString*' index='0' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='status'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPDesignerTrackMessage'>
<method class_method='true' selector='message'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='messageWithPayload:'>
<arg declared_type='NSDictionary*' index='0' name='payload' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='MPEnumDescription'>
<method selector='allValues'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='baseType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isFlagsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='MPEventBinding'>
<method selector='ID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='bindngWithJSONObject:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='eventName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithEventName:onPath:'>
<arg declared_type='NSString*' index='0' name='eventName' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='path'>
<retval declared_type='MPObjectSelector*' type='@'/>
</method>
<method selector='running'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEventName:'>
<arg declared_type='NSString*' index='0' name='eventName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setID:'>
<arg declared_type='NSUInteger' index='0' name='ID' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPath:'>
<arg declared_type='MPObjectSelector*' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunning:'>
<arg declared_type='BOOL' index='0' name='running' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSwizzleClass:'>
<arg declared_type='Class' index='0' name='swizzleClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='swizzleClass'>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='track:properties:'>
<arg declared_type='NSString*' index='0' name='event' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='typeName'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPMiniNotificationViewController'>
<method selector='showWithAnimation'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPNotification'>
<method selector='ID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='body'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='callToAction'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='callToActionURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='image'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='imageURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='messageID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='notificationWithJSONObject:'>
<arg declared_type='NSDictionary*' index='0' name='object' type='@'/>
<retval declared_type='MPNotification*' type='@'/>
</method>
<method selector='setBody:'>
<arg declared_type='NSString*' index='0' name='body' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCallToAction:'>
<arg declared_type='NSString*' index='0' name='callToAction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCallToActionURL:'>
<arg declared_type='NSURL*' index='0' name='callToActionURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSData*' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageURL:'>
<arg declared_type='NSURL*' index='0' name='imageURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='NSString*' index='0' name='type' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPNotificationViewController'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hideWithAnimation:completion:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='notification'>
<retval declared_type='MPNotification*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotification:'>
<arg declared_type='MPNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPObjectIdentityProvider'>
<method selector='identifierForObject:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPObjectSelector'>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fuzzyIsLeafSelected:fromRoot:'>
<arg declared_type='id' index='0' name='leaf' type='@'/>
<arg declared_type='id' index='1' name='root' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fuzzySelectFromRoot:'>
<arg declared_type='id' index='0' name='root' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithString:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLeafSelected:fromRoot:'>
<arg declared_type='id' index='0' name='leaf' type='@'/>
<arg declared_type='id' index='1' name='root' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='objectSelectorWithString:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='MPObjectSelector*' type='@'/>
</method>
<method selector='selectFromRoot:'>
<arg declared_type='id' index='0' name='root' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='selectedClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='setString:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPObjectSerializer'>
<method selector='initWithConfiguration:objectIdentityProvider:'>
<arg declared_type='MPObjectSerializerConfig*' index='0' name='configuration' type='@'/>
<arg declared_type='MPObjectIdentityProvider*' index='1' name='objectIdentityProvider' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='serializedObjectsWithRootObject:'>
<arg declared_type='id' index='0' name='rootObject' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='MPObjectSerializerConfig'>
<method selector='classDescriptions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classWithName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='MPClassDescription*' type='@'/>
</method>
<method selector='enumDescriptions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='enumWithName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='MPEnumDescription*' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='dictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='typeWithName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='MPTypeDescription*' type='@'/>
</method>
</class>
<class name='MPObjectSerializerContext'>
<method selector='addSerializedObject:'>
<arg declared_type='NSDictionary*' index='0' name='serializedObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addVisitedObject:'>
<arg declared_type='NSObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allSerializedObjects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='dequeueUnvisitedObject'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method selector='enqueueUnvisitedObject:'>
<arg declared_type='NSObject*' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasUnvisitedObjects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRootObject:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isVisitedObject:'>
<arg declared_type='NSObject*' index='0' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='MPPropertyDescription'>
<method selector='getSelectorDescription'>
<retval declared_type='MPPropertySelectorDescription*' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='dictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='nofollow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readonly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSelectorDescription'>
<retval declared_type='MPPropertySelectorDescription*' type='@'/>
</method>
<method selector='shouldReadPropertyValueForObject:'>
<arg declared_type='NSObject*' index='0' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='type'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='useInstanceVariableAccess'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='useKeyValueCoding'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='valueTransformer'>
<retval declared_type='NSValueTransformer*' type='@'/>
</method>
</class>
<class name='MPPropertySelectorDescription'>
<method selector='initWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='dictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parameters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='returnType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='selectorName'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPPropertySelectorParameterDescription'>
<method selector='initWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='dictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPSequenceGenerator'>
<method selector='nextValue'>
<retval declared_type='int32_t' type='i'/>
</method>
</class>
<class name='MPSurvey'>
<method selector='ID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='collectionID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='questions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='surveyWithJSONObject:'>
<arg declared_type='NSDictionary*' index='0' name='object' type='@'/>
<retval declared_type='MPSurvey*' type='@'/>
</method>
</class>
<class name='MPSurveyMultipleChoiceQuestion'>
<method selector='choices'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='MPSurveyNavigationController'>
<method selector='backgroundImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBackgroundImage:'>
<arg declared_type='UIImage*' index='0' name='backgroundImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSurvey:'>
<arg declared_type='MPSurvey*' index='0' name='survey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='survey'>
<retval declared_type='MPSurvey*' type='@'/>
</method>
</class>
<class name='MPSurveyQuestion'>
<method selector='ID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='prompt'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='questionWithJSONObject:'>
<arg declared_type='NSObject*' index='0' name='object' type='@'/>
<retval declared_type='MPSurveyQuestion*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPSurveyQuestionViewController'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='highlightColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='question'>
<retval declared_type='MPSurveyQuestion*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightColor:'>
<arg declared_type='UIColor*' index='0' name='highlightColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuestion:'>
<arg declared_type='MPSurveyQuestion*' index='0' name='question' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPSwizzler'>
<method class_method='true' selector='printSwizzles'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='swizzleSelector:onClass:withBlock:named:'>
<arg declared_type='SEL' index='0' name='aSelector' type=':'/>
<arg declared_type='Class' index='1' name='aClass' type='#'/>
<arg declared_type='swizzleBlock' function_pointer='true' index='2' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSString*' index='3' name='aName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='unswizzleSelector:onClass:named:'>
<arg declared_type='SEL' index='0' name='aSelector' type=':'/>
<arg declared_type='Class' index='1' name='aClass' type='#'/>
<arg declared_type='NSString*' index='2' name='aName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPTakeoverNotificationViewController'>
<method selector='backgroundImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setBackgroundImage:'>
<arg declared_type='UIImage*' index='0' name='backgroundImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPTweak'>
<method selector='addObserver:'>
<arg declared_type='id' index='0' name='observer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentValue'>
<retval declared_type='MPTweakValue' type='@'/>
</method>
<method selector='defaultValue'>
<retval declared_type='MPTweakValue' type='@'/>
</method>
<method selector='encoding'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithName:andEncoding:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSString*' index='1' name='encoding' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='maximumValue'>
<retval declared_type='MPTweakValue' type='@'/>
</method>
<method selector='minimumValue'>
<retval declared_type='MPTweakValue' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeObserver:'>
<arg declared_type='id' index='0' name='observer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentValue:'>
<arg declared_type='MPTweakValue' index='0' name='currentValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultValue:'>
<arg declared_type='MPTweakValue' index='0' name='defaultValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumValue:'>
<arg declared_type='MPTweakValue' index='0' name='maximumValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumValue:'>
<arg declared_type='MPTweakValue' index='0' name='minimumValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPTweakStore'>
<method selector='addTweak:'>
<arg declared_type='MPTweak*' index='0' name='tweak' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTweak:'>
<arg declared_type='MPTweak*' index='0' name='tweak' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tweakWithName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='MPTweak*' type='@'/>
</method>
<method selector='tweaks'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='MPTypeDescription'>
<method selector='initWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='dictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPUIControlBinding'>
<method selector='controlEvent'>
<retval declared_type='UIControlEvents' type='I' type64='Q'/>
</method>
<method selector='initWithEventName:onPath:withControlEvent:andVerifyEvent:'>
<arg declared_type='NSString*' index='0' name='eventName' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<arg declared_type='UIControlEvents' index='2' name='controlEvent' type='I' type64='Q'/>
<arg declared_type='UIControlEvents' index='3' name='verifyEvent' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='verifyEvent'>
<retval declared_type='UIControlEvents' type='I' type64='Q'/>
</method>
</class>
<class name='MPUITableViewBinding'>
<method selector='initWithEventName:onPath:withDelegate:'>
<arg declared_type='NSString*' index='0' name='eventName' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<arg declared_type='Class' index='2' name='delegateClass' type='#'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='MPVariant'>
<method selector='ID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='addActionFromJSONObject:andExecute:'>
<arg declared_type='NSDictionary*' index='0' name='object' type='@'/>
<arg declared_type='BOOL' index='1' name='exec' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addActionsFromJSONObject:andExecute:'>
<arg declared_type='NSArray*' index='0' name='actions' type='@'/>
<arg declared_type='BOOL' index='1' name='exec' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTweakFromJSONObject:andExecute:'>
<arg declared_type='NSDictionary*' index='0' name='object' type='@'/>
<arg declared_type='BOOL' index='1' name='exec' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTweaksFromJSONObject:andExecute:'>
<arg declared_type='NSArray*' index='0' name='tweaks' type='@'/>
<arg declared_type='BOOL' index='1' name='exec' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='experimentID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='finish'>
<retval declared_type='void' type='v'/>
</method>
<method selector='finished'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeActionWithName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restart'>
<retval declared_type='void' type='v'/>
</method>
<method selector='running'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setExperimentID:'>
<arg declared_type='NSUInteger' index='0' name='experimentID' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setID:'>
<arg declared_type='NSUInteger' index='0' name='ID' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='variantWithJSONObject:'>
<arg declared_type='NSDictionary*' index='0' name='object' type='@'/>
<retval declared_type='MPVariant*' type='@'/>
</method>
</class>
<class name='MPWebSocket'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='closeWithCode:reason:'>
<arg declared_type='NSInteger' index='0' name='code' type='i' type64='q'/>
<arg declared_type='NSString*' index='1' name='reason' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:protocols:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSArray*' index='1' name='protocols' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURLRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURLRequest:protocols:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSArray*' index='1' name='protocols' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='open'>
<retval declared_type='void' type='v'/>
</method>
<method selector='protocol'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='readyState'>
<retval declared_type='MPWebSocketReadyState' type='i'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg declared_type='NSRunLoop*' index='0' name='aRunLoop' type='@'/>
<arg declared_type='NSString*' index='1' name='mode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='send:'>
<arg declared_type='id' index='0' name='data' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegateDispatchQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='queue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegateOperationQueue:'>
<arg declared_type='NSOperationQueue*' index='0' name='queue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleFromRunLoop:forMode:'>
<arg declared_type='NSRunLoop*' index='0' name='aRunLoop' type='@'/>
<arg declared_type='NSString*' index='1' name='mode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL*' type='@'/>
</method>
</class>
<class name='MRActivityIndicatorView'>
<method selector='hidesWhenStopped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setHidesWhenStopped:'>
<arg declared_type='BOOL' index='0' name='hidesWhenStopped' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type='CGFloat' index='0' name='lineWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimating'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimating'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MRBlurView'>
<method selector='redraw'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MRCircularProgressView'>
<method selector='animationDuration'>
<retval declared_type='CFTimeInterval' type='d'/>
</method>
<method selector='borderWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setAnimationDuration:'>
<arg declared_type='CFTimeInterval' index='0' name='animationDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderWidth:'>
<arg declared_type='CGFloat' index='0' name='borderWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type='CGFloat' index='0' name='lineWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:animated:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueLabel:'>
<arg declared_type='UILabel*' index='0' name='valueLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
</class>
<class name='MRIconView'>
<method selector='path'>
<retval declared_type='UIBezierPath*' type='@'/>
</method>
</class>
<class name='MRProgressOverlayView'>
<method class_method='true' selector='allOverlaysForView:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='createBlurView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='dismiss:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismiss:completion:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='void (^)()' function_pointer='true' index='1' name='completionBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissAllOverlaysForView:animated:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='dismissAllOverlaysForView:animated:completion:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='void (^)()' function_pointer='true' index='2' name='completionBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='dismissOverlayForView:animated:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='dismissOverlayForView:animated:completion:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='void (^)()' function_pointer='true' index='2' name='completionBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hide:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mode'>
<retval declared_type='MRProgressOverlayViewMode' type='I' type64='Q'/>
</method>
<method selector='modeView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method class_method='true' selector='overlayForView:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setMode:'>
<arg declared_type='MRProgressOverlayViewMode' index='0' name='mode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModeView:'>
<arg declared_type='UIView*' index='0' name='modeView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:animated:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStopBlock:'>
<arg declared_type='MRProgressOverlayViewStopBlock' function_pointer='true' index='0' name='stopBlock' type='@?'>
<arg declared_type='MRProgressOverlayView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor*' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleLabelAttributedText:'>
<arg declared_type='NSAttributedString*' index='0' name='titleLabelAttributedText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleLabelText:'>
<arg declared_type='NSString*' index='0' name='titleLabelText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='show:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showOverlayAddedTo:animated:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='showOverlayAddedTo:title:mode:animated:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='NSString*' index='1' name='title' type='@'/>
<arg declared_type='MRProgressOverlayViewMode' index='2' name='mode' type='I' type64='Q'/>
<arg declared_type='BOOL' index='3' name='animated' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='showOverlayAddedTo:title:mode:animated:stopBlock:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='NSString*' index='1' name='title' type='@'/>
<arg declared_type='MRProgressOverlayViewMode' index='2' name='mode' type='I' type64='Q'/>
<arg declared_type='BOOL' index='3' name='animated' type='B'/>
<arg declared_type='MRProgressOverlayViewStopBlock' function_pointer='true' index='4' name='stopBlock' type='@?'>
<arg declared_type='MRProgressOverlayView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='stopBlock'>
<retval declared_type='MRProgressOverlayViewStopBlock' function_pointer='true' type='@?'>
<arg declared_type='MRProgressOverlayView*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='titleLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='titleLabelAttributedText'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='titleLabelText'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MRProgressView'>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:animated:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MRStopButton'>
<method selector='frameThatFits:'>
<arg declared_type='CGRect' index='0' name='parentSize' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='highlightedSizeRatio'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setHighlightedSizeRatio:'>
<arg declared_type='CGFloat' index='0' name='highlightedSizeRatio' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSizeRatio:'>
<arg declared_type='CGFloat' index='0' name='sizeRatio' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeRatio'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='Mixpanel'>
<method selector='archive'>
<retval declared_type='void' type='v'/>
</method>
<method selector='checkForNotificationsOnActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='checkForSurveysOnActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='checkForVariantsOnActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearSuperProperties'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearTimedEvents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='createAlias:forDistinctID:'>
<arg declared_type='NSString*' index='0' name='alias' type='@'/>
<arg declared_type='NSString*' index='1' name='distinctID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentSuperProperties'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='distinctId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='flushInterval'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='flushOnBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='identify:'>
<arg declared_type='NSString*' index='0' name='distinctId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithToken:andFlushInterval:'>
<arg declared_type='NSString*' index='0' name='apiToken' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flushInterval' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithToken:launchOptions:andFlushInterval:'>
<arg declared_type='NSString*' index='0' name='apiToken' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='launchOptions' type='@'/>
<arg declared_type='NSUInteger' index='2' name='flushInterval' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='joinExperiments'>
<retval declared_type='void' type='v'/>
</method>
<method selector='libVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='miniNotificationPresentationTime'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='nameTag'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='people'>
<retval declared_type='MixpanelPeople*' type='@'/>
</method>
<method selector='registerSuperProperties:'>
<arg declared_type='NSDictionary*' index='0' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerSuperPropertiesOnce:'>
<arg declared_type='NSDictionary*' index='0' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerSuperPropertiesOnce:defaultValue:'>
<arg declared_type='NSDictionary*' index='0' name='properties' type='@'/>
<arg declared_type='id' index='1' name='defaultValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='serverURL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setCheckForNotificationsOnActive:'>
<arg declared_type='BOOL' index='0' name='checkForNotificationsOnActive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCheckForSurveysOnActive:'>
<arg declared_type='BOOL' index='0' name='checkForSurveysOnActive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCheckForVariantsOnActive:'>
<arg declared_type='BOOL' index='0' name='checkForVariantsOnActive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDistinctId:'>
<arg declared_type='NSString*' index='0' name='distinctId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlushInterval:'>
<arg declared_type='NSUInteger' index='0' name='flushInterval' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlushOnBackground:'>
<arg declared_type='BOOL' index='0' name='flushOnBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiniNotificationPresentationTime:'>
<arg declared_type='CGFloat' index='0' name='miniNotificationPresentationTime' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNameTag:'>
<arg declared_type='NSString*' index='0' name='nameTag' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPeople:'>
<arg declared_type='MixpanelPeople*' index='0' name='people' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServerURL:'>
<arg declared_type='NSString*' index='0' name='serverURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowNetworkActivityIndicator:'>
<arg declared_type='BOOL' index='0' name='showNetworkActivityIndicator' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowNotificationOnActive:'>
<arg declared_type='BOOL' index='0' name='showNotificationOnActive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowSurveyOnActive:'>
<arg declared_type='BOOL' index='0' name='showSurveyOnActive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='Mixpanel*' type='@'/>
</method>
<method class_method='true' selector='sharedInstanceWithToken:'>
<arg declared_type='NSString*' index='0' name='apiToken' type='@'/>
<retval declared_type='Mixpanel*' type='@'/>
</method>
<method class_method='true' selector='sharedInstanceWithToken:launchOptions:'>
<arg declared_type='NSString*' index='0' name='apiToken' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='launchOptions' type='@'/>
<retval declared_type='Mixpanel*' type='@'/>
</method>
<method selector='showNetworkActivityIndicator'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showNotification'>
<retval declared_type='void' type='v'/>
</method>
<method selector='showNotificationOnActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showNotificationWithID:'>
<arg declared_type='NSUInteger' index='0' name='ID' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showNotificationWithType:'>
<arg declared_type='NSString*' index='0' name='type' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showSurvey'>
<retval declared_type='void' type='v'/>
</method>
<method selector='showSurveyOnActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showSurveyWithID:'>
<arg declared_type='NSUInteger' index='0' name='ID' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeEvent:'>
<arg declared_type='NSString*' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='track:'>
<arg declared_type='NSString*' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='track:properties:'>
<arg declared_type='NSString*' index='0' name='event' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackPushNotification:'>
<arg declared_type='NSDictionary*' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unregisterSuperProperty:'>
<arg declared_type='NSString*' index='0' name='propertyName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MixpanelPeople'>
<method selector='addPushDeviceToken:'>
<arg declared_type='NSData*' index='0' name='deviceToken' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='append:'>
<arg declared_type='NSDictionary*' index='0' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearCharges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteUser'>
<retval declared_type='void' type='v'/>
</method>
<method selector='increment:'>
<arg declared_type='NSDictionary*' index='0' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='increment:by:'>
<arg declared_type='NSString*' index='0' name='property' type='@'/>
<arg declared_type='NSNumber*' index='1' name='amount' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='set:'>
<arg declared_type='NSDictionary*' index='0' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='set:to:'>
<arg declared_type='NSString*' index='0' name='property' type='@'/>
<arg declared_type='id' index='1' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnce:'>
<arg declared_type='NSDictionary*' index='0' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackCharge:'>
<arg declared_type='NSNumber*' index='0' name='amount' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackCharge:withProperties:'>
<arg declared_type='NSNumber*' index='0' name='amount' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='union:'>
<arg declared_type='NSDictionary*' index='0' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSData'>
<method selector='MD5Digest'>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='MD5Digest:'>
<arg declared_type='NSData*' index='0' name='input' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='MD5HexDigest'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='MD5HexDigest:'>
<arg declared_type='NSData*' index='0' name='input' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mp_base64EncodedString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='mp_dataFromBase64String:'>
<arg declared_type='NSString*' index='0' name='aString' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
</class>
<class name='NSDate'>
<method selector='beginningOfDay'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='beginningOfMonth'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='beginningOfWeek'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='beginningOfYear'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateByAddingDays:'>
<arg declared_type='NSInteger' index='0' name='days' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateByAddingHours:'>
<arg declared_type='NSInteger' index='0' name='hours' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateByAddingMinutes:'>
<arg declared_type='NSInteger' index='0' name='minutes' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateByAddingMonths:'>
<arg declared_type='NSInteger' index='0' name='months' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateByAddingSeconds:'>
<arg declared_type='NSInteger' index='0' name='seconds' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateByAddingWeeks:'>
<arg declared_type='NSInteger' index='0' name='weeks' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateByAddingYears:'>
<arg declared_type='NSInteger' index='0' name='years' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateBySubtractingDays:'>
<arg declared_type='NSInteger' index='0' name='days' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateBySubtractingHours:'>
<arg declared_type='NSInteger' index='0' name='hours' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateBySubtractingMinutes:'>
<arg declared_type='NSInteger' index='0' name='minutes' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateBySubtractingMonths:'>
<arg declared_type='NSInteger' index='0' name='months' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateBySubtractingSeconds:'>
<arg declared_type='NSInteger' index='0' name='seconds' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateBySubtractingWeeks:'>
<arg declared_type='NSInteger' index='0' name='weeks' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateBySubtractingYears:'>
<arg declared_type='NSInteger' index='0' name='years' type='i' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='day'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='dayOfYear'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='dayWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='daysAgo'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='daysEarlierThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='daysFrom:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='daysFrom:calendar:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<arg declared_type='NSCalendar*' index='1' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='daysInMonth'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='daysInYear'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='daysLaterThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='daysUntil'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='defaultCalendarIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='endOfDay'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='endOfMonth'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='endOfWeek'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='endOfYear'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='era'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='eraWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='formattedDateWithFormat:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formattedDateWithFormat:locale:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<arg declared_type='NSLocale*' index='1' name='locale' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formattedDateWithFormat:timeZone:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<arg declared_type='NSTimeZone*' index='1' name='timeZone' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formattedDateWithFormat:timeZone:locale:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<arg declared_type='NSTimeZone*' index='1' name='timeZone' type='@'/>
<arg declared_type='NSLocale*' index='2' name='locale' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formattedDateWithStyle:'>
<arg declared_type='NSDateFormatterStyle' index='0' name='style' type='I' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formattedDateWithStyle:locale:'>
<arg declared_type='NSDateFormatterStyle' index='0' name='style' type='I' type64='Q'/>
<arg declared_type='NSLocale*' index='1' name='locale' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formattedDateWithStyle:timeZone:'>
<arg declared_type='NSDateFormatterStyle' index='0' name='style' type='I' type64='Q'/>
<arg declared_type='NSTimeZone*' index='1' name='timeZone' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formattedDateWithStyle:timeZone:locale:'>
<arg declared_type='NSDateFormatterStyle' index='0' name='style' type='I' type64='Q'/>
<arg declared_type='NSTimeZone*' index='1' name='timeZone' type='@'/>
<arg declared_type='NSLocale*' index='2' name='locale' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hour'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='hourWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='hoursAgo'>
<retval declared_type='double' type='d'/>
</method>
<method selector='hoursEarlierThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='hoursFrom:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='hoursLaterThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='hoursUntil'>
<retval declared_type='double' type='d'/>
</method>
<method selector='isEarlierThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEarlierThanOrEqualTo:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInLeapYear'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLaterThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLaterThanOrEqualTo:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isToday'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTomorrow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isYesterday'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='minute'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='minuteWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='minutesAgo'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minutesEarlierThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='minutesFrom:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='minutesLaterThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='minutesUntil'>
<retval declared_type='double' type='d'/>
</method>
<method selector='month'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='monthWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='monthsAgo'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='monthsEarlierThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='monthsFrom:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='monthsFrom:calendar:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<arg declared_type='NSCalendar*' index='1' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='monthsLaterThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='monthsUntil'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='quarter'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='quarterWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='second'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='secondWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='secondsAgo'>
<retval declared_type='double' type='d'/>
</method>
<method selector='secondsEarlierThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='secondsFrom:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='secondsLaterThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='secondsUntil'>
<retval declared_type='double' type='d'/>
</method>
<method class_method='true' selector='setDefaultCalendarIdentifier:'>
<arg declared_type='NSString*' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shortTimeAgoSinceDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shortTimeAgoSinceDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shortTimeAgoSinceNow'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='timeAgoSinceDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeAgoSinceDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeAgoSinceDate:numericDates:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<arg declared_type='BOOL' index='1' name='useNumericDates' type='B'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeAgoSinceNow'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='weekOfMonth'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weekOfMonthWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weekOfYear'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weekOfYearWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weekday'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weekdayOrdinal'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weekdayOrdinalWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weekdayWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weeksAgo'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weeksEarlierThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weeksFrom:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weeksFrom:calendar:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<arg declared_type='NSCalendar*' index='1' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weeksLaterThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='weeksUntil'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='year'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='yearForWeekOfYear'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='yearForWeekOfYearWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='yearWithCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='yearsAgo'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='yearsEarlierThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='yearsFrom:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='yearsFrom:calendar:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<arg declared_type='NSCalendar*' index='1' name='calendar' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='yearsLaterThan:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='yearsUntil'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSDateFormatter'>
<method selector='spellOutStringFromTimeInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='timeInterval' type='d'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromTimeInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='timeInterval' type='d'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSInvocation'>
<method selector='mp_returnValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mp_setArgumentsFromArray:'>
<arg declared_type='NSArray*' index='0' name='argumentArray' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableURLRequest'>
<method selector='mp_SSLPinnedCertificates'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setMp_SSLPinnedCertificates:'>
<arg declared_type='NSArray*' index='0' name='mp_SSLPinnedCertificates' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='JSONData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='allowIDFACollection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg declared_type='NSDictionary*' index='0' name='headers' type='@'/>
<arg declared_type='NSData*' index='1' name='body' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='int64_t' index='3' name='length' type='q'/>
<arg declared_type='NSString*' index='4' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterDidDeclineToRate:'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterDidDismissModalView:animated:'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterDidDisplayAlert:'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterDidOptToRate:'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterDidOptToRemindLater:'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterWillPresentModalView:animated:'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='ALAsset*' type='@'/>
</method>
<method selector='assetsPickerController:didDeselectAsset:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetsPickerController:didFinishPickingAssets:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='NSArray*' index='1' name='assets' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetsPickerController:didHighlightAsset:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetsPickerController:didSelectAsset:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetsPickerController:didUnhighlightAsset:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetsPickerController:isDefaultAssetsGroup:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAssetsGroup*' index='1' name='group' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldDeselectAsset:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldEnableAsset:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldHighlightAsset:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldSelectAsset:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldShowAsset:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldShowAssetsGroup:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAssetsGroup*' index='1' name='group' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerControllerDidCancel:'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cacheImage:forRequest:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSURLRequest*' index='1' name='request' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachedImageForRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='cancelFetch'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cleanup'>
<retval declared_type='void' type='v'/>
</method>
<method selector='containerAvailable:'>
<arg declared_type='TAGContainer*' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='containerRefreshBegin:refreshType:'>
<arg declared_type='TAGContainer*' index='0' name='container' type='@'/>
<arg declared_type='TAGContainerCallbackRefreshType' index='1' name='refreshType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='containerRefreshFailure:failure:refreshType:'>
<arg declared_type='TAGContainer*' index='0' name='container' type='@'/>
<arg declared_type='TAGContainerCallbackRefreshFailure' index='1' name='failure' type='i'/>
<arg declared_type='TAGContainerCallbackRefreshType' index='2' name='refreshType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='containerRefreshSuccess:refreshType:'>
<arg declared_type='TAGContainer*' index='0' name='container' type='@'/>
<arg declared_type='TAGContainerCallbackRefreshType' index='1' name='refreshType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='debug:'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='error:'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='execute:parameters:'>
<arg declared_type='NSString*' index='0' name='tagName' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fetchImageWithSuccess:failure:'>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='0' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='1' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='get'>
<retval declared_type='TAGContainer*' type='@'/>
</method>
<method selector='get:'>
<arg declared_type='NSString*' index='0' name='parameterName' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='identifierForObject:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='info:'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isDone'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='logLevel'>
<retval declared_type='TAGLoggerLogLevelType' type='i'/>
</method>
<method selector='mayStop'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mixpanelWillFlush:'>
<arg declared_type='Mixpanel*' index='0' name='mixpanel' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='notificationController:wasDismissedWithStatus:'>
<arg declared_type='MPNotificationViewController*' index='0' name='controller' type='@'/>
<arg declared_type='BOOL' index='1' name='status' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='payloadObjectForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='questionController:didReceiveAnswerProperties:'>
<arg declared_type='MPSurveyQuestionViewController*' index='0' name='controller' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestBySerializingRequest:withParameters:error:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='responseCommandWithConnection:'>
<arg declared_type='MPABTestDesignerConnection*' index='0' name='connection' type='@'/>
<retval declared_type='NSOperation*' type='@'/>
</method>
<method selector='responseObjectForResponse:data:error:'>
<arg declared_type='NSURLResponse*' index='0' name='response' type='@'/>
<arg declared_type='NSData*' index='1' name='data' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='send:'>
<arg declared_type='NSDictionary*' index='0' name='parameters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='set:value:'>
<arg declared_type='NSString*' index='0' name='parameterName' type='@'/>
<arg declared_type='NSString*' index='1' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowIDFACollection:'>
<arg declared_type='BOOL' index='0' name='allowIDFACollection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLogLevel:'>
<arg declared_type='TAGLoggerLogLevelType' index='0' name='logLevel' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMayStop:'>
<arg declared_type='BOOL' index='0' name='mayStop' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPayloadObject:forKey:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopButton'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='surveyController:wasDismissedWithAnswers:'>
<arg declared_type='MPSurveyNavigationController*' index='0' name='controller' type='@'/>
<arg declared_type='NSArray*' index='1' name='answers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg declared_type='NSUInteger' index='0' name='numberOfBytes' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tweakDidChange:'>
<arg declared_type='MPTweak*' index='0' name='tweak' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='valueForMacro:parameters:'>
<arg declared_type='NSString*' index='0' name='macroName' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='verbose:'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='warning:'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webSocket:didCloseWithCode:reason:wasClean:'>
<arg declared_type='MPWebSocket*' index='0' name='webSocket' type='@'/>
<arg declared_type='NSInteger' index='1' name='code' type='i' type64='q'/>
<arg declared_type='NSString*' index='2' name='reason' type='@'/>
<arg declared_type='BOOL' index='3' name='wasClean' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webSocket:didFailWithError:'>
<arg declared_type='MPWebSocket*' index='0' name='webSocket' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webSocket:didReceiveMessage:'>
<arg declared_type='MPWebSocket*' index='0' name='webSocket' type='@'/>
<arg declared_type='id' index='1' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webSocketDidOpen:'>
<arg declared_type='MPWebSocket*' index='0' name='webSocket' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSRunLoop'>
<method class_method='true' selector='mp_networkRunLoop'>
<retval declared_type='NSRunLoop*' type='@'/>
</method>
</class>
<class name='NSURLRequest'>
<method selector='mp_SSLPinnedCertificates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='Optimizely'>
<method class_method='true' selector='activateMixpanelIntegration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='activeExperiments'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='boolForKey:'>
<arg declared_type='OptimizelyVariableKey*' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='boolForKey:defaultValue:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='BOOL' index='1' name='defaultValue' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='codeBlocksWithKey:blockOne:blockTwo:blockThree:blockFour:defaultBlock:'>
<arg declared_type='OptimizelyCodeBlocksKey*' index='0' name='codeBlocksKey' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='blockOne' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(void)' function_pointer='true' index='2' name='blockTwo' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(void)' function_pointer='true' index='3' name='blockThree' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(void)' function_pointer='true' index='4' name='blockFour' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(void)' function_pointer='true' index='5' name='defaultBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='codeBlocksWithKey:blockOne:blockTwo:blockThree:defaultBlock:'>
<arg declared_type='OptimizelyCodeBlocksKey*' index='0' name='codeBlocksKey' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='blockOne' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(void)' function_pointer='true' index='2' name='blockTwo' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(void)' function_pointer='true' index='3' name='blockThree' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(void)' function_pointer='true' index='4' name='defaultBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='codeBlocksWithKey:blockOne:blockTwo:defaultBlock:'>
<arg declared_type='OptimizelyCodeBlocksKey*' index='0' name='codeBlocksKey' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='blockOne' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(void)' function_pointer='true' index='2' name='blockTwo' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(void)' function_pointer='true' index='3' name='defaultBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='codeBlocksWithKey:blockOne:defaultBlock:'>
<arg declared_type='OptimizelyCodeBlocksKey*' index='0' name='codeBlocksKey' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='blockOne' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(void)' function_pointer='true' index='2' name='defaultBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='codeTest:withBlocks:defaultBlock:'>
<arg declared_type='NSString*' index='0' name='codeTestKey' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='blocks' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='2' name='defaultBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='colorForKey:'>
<arg declared_type='OptimizelyVariableKey*' index='0' name='key' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorForKey:defaultValue:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='UIColor*' index='1' name='defaultValue' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='disableSwizzle'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dispatch'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dispatchEvents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='enableEditor'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='enableGestureInAppStoreApp'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='fetchNewDataFile'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='handleOpenURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='ignoreUIViewSubclassesWithNames:'>
<arg declared_type='NSSet*' index='0' name='viewSubclassesToIgnoreForTagging' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='networkTimeout'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='numberForKey:'>
<arg declared_type='OptimizelyVariableKey*' index='0' name='key' type='@'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='numberForKey:defaultValue:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSNumber*' index='1' name='defaultValue' type='@'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='pointForKey:'>
<arg declared_type='OptimizelyVariableKey*' index='0' name='key' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='pointForKey:defaultValue:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='CGPoint' index='1' name='defaultValue' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='preregisterBlockKey:'>
<arg declared_type='OptimizelyCodeBlocksKey*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='preregisterVariableKey:'>
<arg declared_type='OptimizelyVariableKey*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='projectId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='rectForKey:'>
<arg declared_type='OptimizelyVariableKey*' index='0' name='key' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForKey:defaultValue:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='CGRect' index='1' name='defaultValue' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='registerCallbackForVariableWithKey:callback:'>
<arg declared_type='OptimizelyVariableKey*' index='0' name='key' type='@'/>
<arg declared_type='void (^)(NSString *, id)' function_pointer='true' index='1' name='callback' type='@?'>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='sdkVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setActiveExperiments:'>
<arg declared_type='NSArray*' index='0' name='activeExperiments' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDispatchInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='dispatchInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNetworkTimeout:'>
<arg declared_type='NSTimeInterval' index='0' name='networkTimeout' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldNotGenerateDynamicIds:'>
<arg declared_type='BOOL' index='0' name='shouldNotGenerateDynamicIds' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldReloadExperimentsOnForegrounding:'>
<arg declared_type='BOOL' index='0' name='shouldReloadExperimentsOnForegrounding' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserId:'>
<arg declared_type='NSString*' index='0' name='userId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setValue:forCustomTag:'>
<arg declared_type='NSString*' index='0' name='tagValue' type='@'/>
<arg declared_type='NSString*' index='1' name='tagKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerboseLogging:'>
<arg declared_type='BOOL' index='0' name='verboseLogging' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='id' type='@'/>
</method>
<method selector='shouldNotGenerateDynamicIds'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldReloadExperimentsOnForegrounding'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sizeForKey:'>
<arg declared_type='OptimizelyVariableKey*' index='0' name='key' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sizeForKey:defaultValue:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='CGSize' index='1' name='defaultValue' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='startOptimizelyWithAPIToken:launchOptions:'>
<arg declared_type='NSString*' index='0' name='apiToken' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='launchOptions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='startOptimizelyWithAPIToken:launchOptions:experimentsLoadedCallback:'>
<arg declared_type='NSString*' index='0' name='apiToken' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='launchOptions' type='@'/>
<arg declared_type='OptimizelySuccessBlock' function_pointer='true' index='2' name='experimentsLoadedCallback' type='@?'>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='stringForKey:'>
<arg declared_type='OptimizelyVariableKey*' index='0' name='key' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringForKey:defaultValue:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSString*' index='1' name='defaultValue' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='trackEvent:'>
<arg declared_type='NSString*' index='0' name='description' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackEvent:'>
<arg declared_type='NSString*' index='0' name='description' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='trackRevenue:'>
<arg declared_type='int' index='0' name='revenueAmount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='verboseLogging'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='OptimizelyCodeBlocksKey'>
<method selector='blockNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='optimizelyCodeBlocksKey:blockNames:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSArray*' index='1' name='blockNames' type='@'/>
<retval declared_type='OptimizelyCodeBlocksKey*' type='@'/>
</method>
</class>
<class name='OptimizelyVariableKey'>
<method selector='defaultValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToOptimizelyVariableKey:'>
<arg declared_type='OptimizelyVariableKey*' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='optimizelyKeyWithKey:defaultBOOL:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='BOOL' index='1' name='defaultValue' type='B'/>
<retval declared_type='OptimizelyVariableKey*' type='@'/>
</method>
<method class_method='true' selector='optimizelyKeyWithKey:defaultCGPoint:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='CGPoint' index='1' name='defaultValue' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='OptimizelyVariableKey*' type='@'/>
</method>
<method class_method='true' selector='optimizelyKeyWithKey:defaultCGRect:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='CGRect' index='1' name='defaultValue' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='OptimizelyVariableKey*' type='@'/>
</method>
<method class_method='true' selector='optimizelyKeyWithKey:defaultCGSize:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='CGSize' index='1' name='defaultValue' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='OptimizelyVariableKey*' type='@'/>
</method>
<method class_method='true' selector='optimizelyKeyWithKey:defaultNSNumber:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSNumber*' index='1' name='defaultValue' type='@'/>
<retval declared_type='OptimizelyVariableKey*' type='@'/>
</method>
<method class_method='true' selector='optimizelyKeyWithKey:defaultNSString:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSString*' index='1' name='defaultValue' type='@'/>
<retval declared_type='OptimizelyVariableKey*' type='@'/>
</method>
<method class_method='true' selector='optimizelyKeyWithKey:defaultUIColor:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='UIColor*' index='1' name='defaultValue' type='@'/>
<retval declared_type='OptimizelyVariableKey*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='TAGContainer'>
<method selector='booleanForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='containerId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='doubleForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='functionCallMacroHandlerForMacro:'>
<arg declared_type='NSString*' index='0' name='functionCallMacroName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='functionCallTagHandlerForTag:'>
<arg declared_type='NSString*' index='0' name='functionCallTagName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='int64ForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='isDefault'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastRefreshTime'>
<retval declared_type='double' type='d'/>
</method>
<method selector='refresh'>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerFunctionCallMacroHandler:forMacro:'>
<arg declared_type='id' index='0' name='handler' type='@'/>
<arg declared_type='NSString*' index='1' name='macroName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerFunctionCallTagHandler:forTag:'>
<arg declared_type='id' index='0' name='handler' type='@'/>
<arg declared_type='NSString*' index='1' name='tagName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastRefreshTime:'>
<arg declared_type='double' index='0' name='lastRefreshTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='TAGContainerOpener'>
<method class_method='true' selector='defaultTimeout'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='openContainerWithId:tagManager:openType:timeout:'>
<arg declared_type='NSString*' index='0' name='containerId' type='@'/>
<arg declared_type='TAGManager*' index='1' name='tagManager' type='@'/>
<arg declared_type='TAGOpenType' index='2' name='openType' type='i'/>
<arg declared_type='NSTimeInterval*' index='3' name='timeout' type='^d'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='openContainerWithId:tagManager:openType:timeout:notifier:'>
<arg declared_type='NSString*' index='0' name='containerId' type='@'/>
<arg declared_type='TAGManager*' index='1' name='tagManager' type='@'/>
<arg declared_type='TAGOpenType' index='2' name='openType' type='i'/>
<arg declared_type='NSTimeInterval*' index='3' name='timeout' type='^d'/>
<arg declared_type='id' index='4' name='notifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='TAGDataLayer'>
<method selector='dataLayer'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='get:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='NSObject*' type='@'/>
</method>
<method selector='push:'>
<arg declared_type='NSDictionary*' index='0' name='update' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pushValue:forKey:'>
<arg declared_type='NSObject*' index='0' name='value' type='@'/>
<arg declared_type='NSObject*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='TAGManager'>
<method selector='dataLayer'>
<retval declared_type='TAGDataLayer*' type='@'/>
</method>
<method selector='dispatch'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='dispatchWithCompletionHandler:'>
<arg declared_type='void (^)(TAGDispatchResult)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='TAGDispatchResult' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getContainerById:'>
<arg declared_type='NSString*' index='0' name='containerId' type='@'/>
<retval declared_type='TAGContainer*' type='@'/>
</method>
<method class_method='true' selector='instance'>
<retval declared_type='TAGManager*' type='@'/>
</method>
<method selector='logger'>
<retval declared_type='id' type='@'/>
</method>
<method selector='openContainerById:callback:'>
<arg declared_type='NSString*' index='0' name='containerId' type='@'/>
<arg declared_type='id' index='1' name='callback' type='@'/>
<retval declared_type='TAGContainer*' type='@'/>
</method>
<method selector='previewWithUrl:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='refreshMode'>
<retval declared_type='TAGRefreshMode' type='i'/>
</method>
<method selector='setDispatchInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='dispatchInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLogger:'>
<arg declared_type='id' index='0' name='logger' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRefreshMode:'>
<arg declared_type='TAGRefreshMode' index='0' name='refreshMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIActivityIndicatorView'>
<method selector='setAnimatingWithStateOfOperation:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimatingWithStateOfTask:'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIAlertView'>
<method class_method='true' selector='showAlertViewForRequestOperationWithErrorOnCompletion:delegate:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showAlertViewForRequestOperationWithErrorOnCompletion:delegate:cancelButtonTitle:otherButtonTitles:' sentinel='0' variadic='true'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<arg declared_type='NSString*' index='2' name='cancelButtonTitle' type='@'/>
<arg declared_type='NSString*' index='3' name='otherButtonTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showAlertViewForTaskWithErrorOnCompletion:delegate:'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showAlertViewForTaskWithErrorOnCompletion:delegate:cancelButtonTitle:otherButtonTitles:' sentinel='0' variadic='true'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<arg declared_type='NSString*' index='2' name='cancelButtonTitle' type='@'/>
<arg declared_type='NSString*' index='3' name='otherButtonTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIButton'>
<method selector='cancelBackgroundImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_backgroundImageFormat'>
<retval declared_type='HNKCacheFormat*' type='@'/>
</method>
<method selector='hnk_cancelSetBackgroundImage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_cancelSetImage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_imageFormat'>
<retval declared_type='HNKCacheFormat*' type='@'/>
</method>
<method selector='hnk_setBackgroundImage:withKey:forState:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='UIControlState' index='2' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImage:withKey:forState:placeholder:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='UIControlState' index='2' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='3' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImage:withKey:forState:placeholder:success:failure:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='UIControlState' index='2' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='3' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='4' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='5' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImageFromFetcher:forState:'>
<arg declared_type='id' index='0' name='fetcher' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImageFromFetcher:forState:placeholder:'>
<arg declared_type='id' index='0' name='fetcher' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImageFromFetcher:forState:placeholder:success:failure:'>
<arg declared_type='id' index='0' name='fetcher' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='3' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImageFromFile:forState:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImageFromFile:forState:placeholder:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImageFromFile:forState:placeholder:success:failure:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='3' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImageFromURL:forState:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImageFromURL:forState:placeholder:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setBackgroundImageFromURL:forState:placeholder:success:failure:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='3' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImage:withKey:forState:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='UIControlState' index='2' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImage:withKey:forState:placeholder:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='UIControlState' index='2' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='3' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImage:withKey:forState:placeholder:success:failure:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='UIControlState' index='2' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='3' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='4' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='5' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFetcher:forState:'>
<arg declared_type='id' index='0' name='fetcher' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFetcher:forState:placeholder:'>
<arg declared_type='id' index='0' name='fetcher' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFetcher:forState:placeholder:success:failure:'>
<arg declared_type='id' index='0' name='fetcher' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='3' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFile:forState:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFile:forState:placeholder:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFile:forState:placeholder:success:failure:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='3' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromURL:forState:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromURL:forState:placeholder:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromURL:forState:placeholder:success:failure:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='3' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageForState:withURL:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageForState:withURL:placeholderImage:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageForState:withURLRequest:placeholderImage:success:failure:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURLRequest*' index='1' name='urlRequest' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<arg declared_type='void (^)(NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHnk_backgroundImageFormat:'>
<arg declared_type='HNKCacheFormat*' index='0' name='hnk_backgroundImageFormat' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHnk_imageFormat:'>
<arg declared_type='HNKCacheFormat*' index='0' name='hnk_imageFormat' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForState:withURL:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForState:withURL:placeholderImage:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForState:withURLRequest:placeholderImage:success:failure:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURLRequest*' index='1' name='urlRequest' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<arg declared_type='void (^)(NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIColor'>
<method selector='colorWithNoiseWithOpacity:'>
<arg declared_type='CGFloat' index='0' name='opacity' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorWithNoiseWithOpacity:andBlendMode:'>
<arg declared_type='CGFloat' index='0' name='opacity' type='f' type64='d'/>
<arg declared_type='CGBlendMode' index='1' name='blendMode' type='i'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='colorWithSaturationComponent:'>
<arg declared_type='CGFloat' index='0' name='saturation' type='f' type64='d'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='mp_applicationPrimaryColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='mp_darkEffectColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='mp_extraLightEffectColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='mp_lightEffectColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
</class>
<class name='UIImage'>
<method selector='imageWithNoiseOpacity:'>
<arg declared_type='CGFloat' index='0' name='opacity' type='f' type64='d'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageWithNoiseOpacity:andBlendMode:'>
<arg declared_type='CGFloat' index='0' name='opacity' type='f' type64='d'/>
<arg declared_type='CGBlendMode' index='1' name='blendMode' type='i'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='mp_applyBlurWithRadius:tintColor:saturationDeltaFactor:maskImage:'>
<arg declared_type='CGFloat' index='0' name='blurRadius' type='f' type64='d'/>
<arg declared_type='UIColor*' index='1' name='tintColor' type='@'/>
<arg declared_type='CGFloat' index='2' name='saturationDeltaFactor' type='f' type64='d'/>
<arg declared_type='UIImage*' index='3' name='maskImage' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='mp_applyDarkEffect'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='mp_applyExtraLightEffect'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='mp_applyLightEffect'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='mp_applyTintEffectWithColor:'>
<arg declared_type='UIColor*' index='0' name='tintColor' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='mp_averageColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='mp_importantColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='mr_applyBlurWithRadius:tintColor:saturationDeltaFactor:maskImage:'>
<arg declared_type='CGFloat' index='0' name='blurRadius' type='f' type64='d'/>
<arg declared_type='UIColor*' index='1' name='tintColor' type='@'/>
<arg declared_type='CGFloat' index='2' name='saturationDeltaFactor' type='f' type64='d'/>
<arg declared_type='UIImage*' index='3' name='maskImage' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='resizedImageByHeight:'>
<arg declared_type='NSUInteger' index='0' name='height' type='I' type64='Q'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='resizedImageByMagick:'>
<arg declared_type='NSString*' index='0' name='spec' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='resizedImageByWidth:'>
<arg declared_type='NSUInteger' index='0' name='width' type='I' type64='Q'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='resizedImageWithMaximumSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='resizedImageWithMinimumSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_cacheFormat'>
<retval declared_type='HNKCacheFormat*' type='@'/>
</method>
<method selector='hnk_cancelSetImage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImage:withKey:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImage:withKey:placeholder:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImage:withKey:placeholder:success:failure:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='3' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFetcher:'>
<arg declared_type='id' index='0' name='fetcher' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFetcher:placeholder:'>
<arg declared_type='id' index='0' name='fetcher' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFetcher:placeholder:success:failure:'>
<arg declared_type='id' index='0' name='fetcher' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='2' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='3' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFile:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFile:placeholder:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromFile:placeholder:success:failure:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='2' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='3' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromURL:placeholder:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hnk_setImageFromURL:placeholder:success:failure:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='2' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='3' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageResponseSerializer'>
<retval declared_type='AFImageResponseSerializer*' type='@'/>
</method>
<method selector='setHnk_cacheFormat:'>
<arg declared_type='HNKCacheFormat*' index='0' name='hnk_cacheFormat' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageResponseSerializer:'>
<arg declared_type='AFImageResponseSerializer*' index='0' name='imageResponseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholderImage' type='@'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedImageCache:'>
<arg declared_type='id' index='0' name='imageCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImageCache'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIProgressView'>
<method selector='setProgressWithDownloadProgressOfOperation:animated:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressWithDownloadProgressOfTask:animated:'>
<arg declared_type='NSURLSessionDownloadTask*' index='0' name='task' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressWithUploadProgressOfOperation:animated:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressWithUploadProgressOfTask:animated:'>
<arg declared_type='NSURLSessionUploadTask*' index='0' name='task' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIView'>
<method selector='hnk_scaleMode'>
<retval declared_type='HNKScaleMode' type='i' type64='q'/>
</method>
<method selector='mp_fingerprintVersion'>
<retval declared_type='int' type='i'/>
</method>
<method selector='mp_snapshotForBlur'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='mp_snapshotImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='optimizelyId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setOptimizelyId:'>
<arg declared_type='NSString*' index='0' name='optimizelyId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIWebView'>
<method selector='loadRequest:MIMEType:textEncodingName:progress:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSString*' index='1' name='MIMEType' type='@'/>
<arg declared_type='NSString*' index='2' name='textEncodingName' type='@'/>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='3' name='progress' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSData *(^)(NSHTTPURLResponse *, NSData *)' function_pointer='true' index='4' name='success' type='@?'>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='NSData*' type='@'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='5' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadRequest:progress:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='1' name='progress' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSString *(^)(NSHTTPURLResponse *, NSString *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestSerializer'>
<retval declared_type='AFHTTPRequestSerializer*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='setRequestSerializer:'>
<arg declared_type='AFHTTPRequestSerializer*' index='0' name='requestSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='_MPTweakBindObserver'>
<method selector='attachToObject:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTweak:block:'>
<arg declared_type='MPTweak*' index='0' name='tweak' type='@'/>
<arg declared_type='_MPTweakBindObserverBlock' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<informal_protocol name='AFImageCache'>
<method selector='cacheImage:forRequest:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSURLRequest*' index='1' name='request' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachedImageForRequest:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='AFMultipartFormData'>
<method selector='appendPartWithFileData:name:fileName:mimeType:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:' type='B20@0:4@8@12^@16' type64='B40@0:8@16@24^@32'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:' type='B28@0:4@8@12@16@20^@24' type64='B56@0:8@16@24@32@40^@48'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSDictionary*' index='0' name='headers' type='@'/>
<arg declared_type='NSData*' index='1' name='body' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:' type='v32@0:4@8@12@16q20@28' type64='v56@0:8@16@24@32q40@48'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='int64_t' index='3' name='length' type='q'/>
<arg declared_type='NSString*' index='4' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:' type='v20@0:4I8d12' type64='v32@0:8Q16d24'>
<arg declared_type='NSUInteger' index='0' name='numberOfBytes' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AFURLRequestSerialization'>
<method selector='requestBySerializingRequest:withParameters:error:' type='@20@0:4@8@12^@16' type64='@40@0:8@16@24^@32'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='AFURLResponseSerialization'>
<method selector='responseObjectForResponse:data:error:' type='@20@0:4@8@12^@16' type64='@40@0:8@16@24^@32'>
<arg declared_type='NSURLResponse*' index='0' name='response' type='@'/>
<arg declared_type='NSData*' index='1' name='data' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='AppiraterDelegate'>
<method selector='appiraterDidDeclineToRate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterDidDismissModalView:animated:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterDidDisplayAlert:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterDidOptToRate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterDidOptToRemindLater:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appiraterWillPresentModalView:animated:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='Appirater*' index='0' name='appirater' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CTAssetItemViewControllerDataSource'>
<method selector='assetAtIndex:' type='@12@0:4I8' type64='@24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='ALAsset*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CTAssetsPickerControllerDelegate'>
<method selector='assetsPickerController:didDeselectAsset:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetsPickerController:didFinishPickingAssets:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='NSArray*' index='1' name='assets' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetsPickerController:didHighlightAsset:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetsPickerController:didSelectAsset:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetsPickerController:didUnhighlightAsset:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assetsPickerController:isDefaultAssetsGroup:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAssetsGroup*' index='1' name='group' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldDeselectAsset:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldEnableAsset:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldHighlightAsset:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldSelectAsset:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldShowAsset:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAsset*' index='1' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerController:shouldShowAssetsGroup:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<arg declared_type='ALAssetsGroup*' index='1' name='group' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetsPickerControllerDidCancel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='CTAssetsPickerController*' index='0' name='picker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='GAILogger'>
<method selector='error:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='info:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='logLevel' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='TAGLoggerLogLevelType' type='i'/>
</method>
<method selector='setLogLevel:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='TAGLoggerLogLevelType' index='0' name='logLevel' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='verbose:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='warning:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='GAITracker'>
<method selector='allowIDFACollection' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='get:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSString*' index='0' name='parameterName' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='send:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSDictionary*' index='0' name='parameters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='set:value:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSString*' index='0' name='parameterName' type='@'/>
<arg declared_type='NSString*' index='1' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowIDFACollection:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='allowIDFACollection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='HNKFetcher'>
<method selector='cancelFetch' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fetchImageWithSuccess:failure:' type='v16@0:4@?8@?12' type64='v32@0:8@?16@?24'>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='0' name='successBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='1' name='failureBlock' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='key' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='MPABTestDesignerMessage'>
<method selector='JSONData' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='payloadObjectForKey:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseCommandWithConnection:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='MPABTestDesignerConnection*' index='0' name='connection' type='@'/>
<retval declared_type='NSOperation*' type='@'/>
</method>
<method selector='setPayloadObject:forKey:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='MPDesignerSessionCollection'>
<method selector='cleanup' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MPNotificationViewControllerDelegate'>
<method selector='notificationController:wasDismissedWithStatus:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='MPNotificationViewController*' index='0' name='controller' type='@'/>
<arg declared_type='BOOL' index='1' name='status' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MPObjectIdentifierProvider'>
<method selector='identifierForObject:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='MPSurveyNavigationControllerDelegate'>
<method selector='surveyController:wasDismissedWithAnswers:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='MPSurveyNavigationController*' index='0' name='controller' type='@'/>
<arg declared_type='NSArray*' index='1' name='answers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MPSurveyQuestionViewControllerDelegate'>
<method selector='questionController:didReceiveAnswerProperties:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='MPSurveyQuestionViewController*' index='0' name='controller' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='properties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MPTweakObserver'>
<method selector='tweakDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='MPTweak*' index='0' name='tweak' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MPWebSocketDelegate'>
<method selector='webSocket:didCloseWithCode:reason:wasClean:' type='v24@0:4@8i12@16B20' type64='v44@0:8@16q24@32B40'>
<arg declared_type='MPWebSocket*' index='0' name='webSocket' type='@'/>
<arg declared_type='NSInteger' index='1' name='code' type='i' type64='q'/>
<arg declared_type='NSString*' index='2' name='reason' type='@'/>
<arg declared_type='BOOL' index='3' name='wasClean' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webSocket:didFailWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='MPWebSocket*' index='0' name='webSocket' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webSocket:didReceiveMessage:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='MPWebSocket*' index='0' name='webSocket' type='@'/>
<arg declared_type='id' index='1' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webSocketDidOpen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='MPWebSocket*' index='0' name='webSocket' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MRStopableView'>
<method selector='mayStop' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setMayStop:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='mayStop' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIButton*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='MixpanelDelegate'>
<method selector='mixpanelWillFlush:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='Mixpanel*' index='0' name='mixpanel' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='TAGContainerCallback'>
<method selector='containerRefreshBegin:refreshType:' type='v16@0:4@8i12' type64='v28@0:8@16i24'>
<arg declared_type='TAGContainer*' index='0' name='container' type='@'/>
<arg declared_type='TAGContainerCallbackRefreshType' index='1' name='refreshType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='containerRefreshFailure:failure:refreshType:' type='v20@0:4@8i12i16' type64='v32@0:8@16i24i28'>
<arg declared_type='TAGContainer*' index='0' name='container' type='@'/>
<arg declared_type='TAGContainerCallbackRefreshFailure' index='1' name='failure' type='i'/>
<arg declared_type='TAGContainerCallbackRefreshType' index='2' name='refreshType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='containerRefreshSuccess:refreshType:' type='v16@0:4@8i12' type64='v28@0:8@16i24'>
<arg declared_type='TAGContainer*' index='0' name='container' type='@'/>
<arg declared_type='TAGContainerCallbackRefreshType' index='1' name='refreshType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='TAGContainerFuture'>
<method selector='get' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='TAGContainer*' type='@'/>
</method>
<method selector='isDone' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='TAGContainerOpenerNotifier'>
<method selector='containerAvailable:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='TAGContainer*' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='TAGFunctionCallMacroHandler'>
<method selector='valueForMacro:parameters:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSString*' index='0' name='macroName' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='TAGFunctionCallTagHandler'>
<method selector='execute:parameters:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSString*' index='0' name='tagName' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='parameters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='TAGLogger'>
<method selector='debug:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='error:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='info:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='logLevel' type='i8@0:4' type64='i16@0:8'>
<retval declared_type='TAGLoggerLogLevelType' type='i'/>
</method>
<method selector='setLogLevel:' type='v12@0:4i8' type64='v20@0:8i16'>
<arg declared_type='TAGLoggerLogLevelType' index='0' name='logLevel' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='verbose:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='warning:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
